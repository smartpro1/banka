{"version":3,"sources":["actions/types.js","securityUtils/setJwtToken.js","actions/userActions.js","components/LoadSpinner/LoadSpinner.js","components/Login/Login.js","components/Signup/Signup.js","components/ForgotPassword/ForgotPassword.js","components/TransferFund/TransferFund.js","reducers/errorReducer.js","reducers/loginReducer.js","reducers/fullnameReducer.js","reducers/transferFundReducer.js","reducers/adminReducer.js","reducers/index.js","store.js","securityUtils/SecuredRoute.js","securityUtils/CashierAdminRoute.js","components/Logo/Logo.js","components/Dashboard/TransferDetails.js","components/Chart/LineChart.js","components/Dashboard/Dashboard.js","components/ForgotPin/ForgotPin.js","HelperFunctions/isObjectEmpty.js","components/ChangePin/ChangePin.js","components/UserProfile/UserProfile.js","components/UserGuide/UserGuide.js","components/ResetPassword/ResetPassword.js","components/SuccessMessage/SuccessMessage.js","components/ConfirmRegistration/ConfirmRegistration.js","components/ConfirmRegistration/ConfirmReg.js","components/DummyAccounts/DummyAccounts.js","components/TransferStatus/TransferSuccess.js","components/ConfirmRegistration/RegistrationSuccessful.js","components/ConfirmRegistration/ChangePinSuccessful.js","components/ConfirmRegistration/ForgotPinSuccessful.js","components/ConfirmRegistration/ForgotPasswdSuccessful.js","components/Error404/Error404.js","components/ConfirmRegistration/ResetPasswdSuccessful.js","components/Session/SessionTimeout.js","components/Admin/AdminSuccessMesg/AdminsuccessMesg.js","components/Admin/InitiateTransaction/InitiateTransaction.js","actions/adminActions.js","components/Admin/Layout/Sidebar/Sidebar.js","components/Admin/Layout/Navbar/Navbar.js","components/Admin/Withdrawal/Withdrawal.js","components/Admin/Deposit/Deposit.js","components/Admin/Operation/Operation.js","components/Admin/Dashboard/Dashboard.js","components/Admin/TrackedTransDetails/TrackedTransDetails.js","components/Admin/Pagination/Pagination.js","components/Admin/Data.js","components/Admin/TrackedTransactions/TrackedTransactions.js","components/Admin/TrackTransactions/TrackTransactions.js","components/ResetPin/ResetPin.js","App.js","index.js","assets/images/img1.PNG","assets/images/img2.PNG","assets/images/error_404.jpg"],"names":["GET_ERRORS","setJwtToken","token","axios","defaults","headers","common","logoutAction","dispatch","localStorage","removeItem","type","payload","window","location","href","inactiveSessionTimeout","getItem","time","timer","setInterval","clearInterval","resetCountdown","addEventListener","LoadSpinner","id","className","aria-hidden","Login","handleOnChange","event","setState","target","name","value","handleOnSubmit","preventDefault","isLoading","state","userCredentials","username","password","props","loginAction","history","componentWillReceiveProps","nextProps","errors","translateContainer","this","login","loginCredentials","isValidToken","fullname","to","translate","handIcon","info","isLoader","displayErrorMessage","credential","onSubmit","placeholder","onChange","required","htmlFor","onClick","Component","connect","a","post","res","data","setItem","decodedJwtToken","jwtDecode","roles","includes","push","response","SignUp","phoneNumber","confirmPassword","length","phoneNumberError","firstTwoDigits","substring","test","confirmPasswordError","userDetails","sex","email","signupAction","submitBtnClassName","btnNotAllowSubmit","Object","keys","constructor","disabled","minLength","maxLength","ForgotPassword","userEmail","forgotPasswordAction","EmailSendingException","invalidCredentialException","TransferFund","benfAcctNumError","pinError","benfAcctNum","pin","btnText","description","amount","transferDetails","replace","transferFundsAction","elementsState","handleBackClick","transferChargeLabel","transferChargeInput","backIcon","transferBtn","thousandSeparator","initialState","transferFund","trackedTransactions","getTransactionsById","combineReducers","action","isPayload","transactions","admin","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","reactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","navigator","userAgent","user","component","otherProps","render","Logo","TransferDetails","date","transactionClass","transactionType","displayType","LineChart","get","dateArr","newData","i","str","substr","currentMonth","Date","toLocaleString","month","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","Dashboard","logout","componentDidMount","getAccountDetails","accountInfo","accountBalance","handleOnClick","dashboardClass","sidebarClass","map","trans","key","transactionId","created_At","Fragment","title","acctNum","ForgotPin","forgotPinAction","isObjectEmpty","obj","ChangePin","currentPin","currentPinError","newPin","newPinError","confirmNewPin","confirmNewPinError","pinCredentials","changePinAction","UserProfile","src","img1","alt","UserGuide","img2","ResetPassword","userPassDetails","search","resetPasswordAction","SuccessMessage","message","mesg","ConfirmReg","useState","setStatus","setDescription","useEffect","getMessage","DummyAccounts","copyTextToClipBoard","nextSibling","setTimeout","style","visibility","getElementsId","previousSibling","inputElement","document","getElementById","select","setSelectionRange","execCommand","accounts","setAccounts","getDummyAccounts","dummyAccounts","val1","val2","accountNumber","readOnly","TransferSuccess","componentWillUnmount","updateTransactionAction","beneficiary","timeOfTransaction","transaction","ForgotPinSuccessful","ForgotPasswdSuccessful","Error404","console","log","error404Img","ResetPasswdSuccessful","SessionTimeOut","AdminSuccessMesg","handleClick","showMesg","hideMesg","adminSuccessMesg","InitiateTransaction","acctNumError","depositor","apiResponse","transactionDetails","withdrawalAction","depositAction","then","status","initiateTransBtn","adminsuccessMesg","defaultProps","transDetails","err","Sidebar","exact","activeClassName","Navbar","Withdrawal","Deposit","Operation","confirm","operationDetails","operationAction","opsSubmitBtn","operation","TrackedDetails","posts","loading","accountNumberInvolved","staffInvolved","userId","Pagination","postsPerPage","totalPosts","paginate","nextPage","prevPage","pageNumbers","totalPages","Math","ceil","Array","from","index","pageNum","pageLink","TrackedTransactions","currentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","querySelector","classList","remove","add","setActive","TrackTransaction","handleToggleSwitch","showTransactionById","start","end","transId","dateRange","trackTransactionsAction","getTransactionByIdAction","h2Content","trackTransBtn","ResetPin","resetPinAction","jwtToken","decodedToken","currentTime","now","exp","App","appClass","pathname","path","AdminDashboard","TrackTransactions","ChangePinSuccessful","Signup","RegistrationSuccessful","ReactDOM","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.8f0ee478.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\n\r\nexport const LOGIN = \"LOGIN\";\r\nexport const FULLNAME = \"FULLNAME\";\r\nexport const TRANSFERFUND = \"TRANSFERFUND\";\r\nexport const UPDATETRANSACTION = \"UPDATETRANSACTION\";\r\n\r\n// Admin actions\r\n// export const WITHDRAWAL = \"WITHDRAWAL\";\r\n// export const DEPOSIT = \"DEPOSIT\";\r\n// export const OPERATION = \"OPERATION\";\r\nexport const TRACK_TRANSACTIONS = \"TRACK_TRANSACTIONS\";\r\nexport const GET_TRANSACTION_BY_ID = \"GET_TRANSACTION_BY_ID\";","import axios from \"axios\";\r\n\r\nexport const setJwtToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { GET_ERRORS, LOGIN, FULLNAME, TRANSFERFUND, UPDATETRANSACTION } from \"./types\";\r\n\r\nimport { setJwtToken } from \"../securityUtils/setJwtToken\";\r\n\r\nexport const signupAction = (userDetails, history, fullname) => async (dispatch) => {\r\n  try {\r\n    await axios.post(`/api/v1/users/signup`, userDetails);\r\n    dispatch({\r\n      type: FULLNAME,\r\n      payload: fullname,\r\n    });\r\n    history.push(\"/reg-successful\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const loginAction = (userCredentials, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/v1/users/login`, userCredentials);\r\n    //extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in local storage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set the token in the header using a function defined somewhere else\r\n    setJwtToken(token);\r\n    // decode token on React side\r\n    const decodedJwtToken = jwtDecode(token);\r\n    dispatch({\r\n      type: LOGIN,\r\n      payload: decodedJwtToken,\r\n    });\r\n     \r\n    // history.push(\"/dashboard\");\r\n    if(decodedJwtToken.roles.includes(\"ROLE_USER\")) {\r\n      history.push(\"/dashboard\");\r\n    } else {\r\n      history.push(\"/admin-dashboard\");\r\n    }\r\n    \r\n    inactiveSessionTimeout();\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutAction = () => (dispatch) => {\r\n  // When the person logs out, we remove jwt from localStorage as well as the header\r\n  localStorage.removeItem(\"jwtToken\");\r\n  dispatch({\r\n    type: LOGIN,\r\n    payload: {},\r\n  });\r\n  window.location.href = \"/\";\r\n};\r\n\r\n// export const buttonAction = () => {\r\n\r\n// };\r\n\r\nexport const changePinAction = (pinCredentials, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(`/api/v1/users/change-pin`, pinCredentials);\r\n    history.push(\"/change-pin-success\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const forgotPasswordAction = (email, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(`/api/v1/users/forgot-password`, email);\r\n    history.push(\"/forgot-passwd-successful\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const forgotPinAction = (email, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(`/api/v1/users/forgot-pin`, email);\r\n    history.push(\"/forgot-pin-successful\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPasswordAction = (password, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(`/api/v1/users/reset-password`, password);\r\n    history.push(\"/reset-passwd-successful\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPinAction = (pinCredentials, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(`/api/v1/users/reset-pin`, pinCredentials);\r\n    history.push(\"/change-pin-success\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const transferFundsAction = (transferDetails, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/v1/users/transfer-funds`, transferDetails);\r\n    dispatch({\r\n      type: TRANSFERFUND,\r\n      payload: res.data,\r\n    });\r\n    history.push(\"/transfer-success\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateTransactionAction = (transaction) => (dispatch) => {\r\n  dispatch({\r\n    type: UPDATETRANSACTION,\r\n    payload: transaction,\r\n  });\r\n};\r\n\r\nexport const inactiveSessionTimeout = () => {\r\n\r\n  if (!localStorage.getItem(\"jwtToken\")) {\r\n    return;\r\n  }\r\n\r\n  let time = 120;\r\n\r\n  const timer = setInterval(() => {\r\n    time--;\r\n    if (time === 0) {\r\n      clearInterval(timer);\r\n      localStorage.removeItem(\"jwtToken\");\r\n      window.location.href = \"/session-timeout\";\r\n    }\r\n\r\n  }, 1000);\r\n\r\n  const resetCountdown = () => {\r\n    time = 120;\r\n  }\r\n  window.addEventListener('mousemove', resetCountdown);\r\n  window.addEventListener('mousedown', resetCountdown);\r\n  window.addEventListener('keypress', resetCountdown);\r\n  window.addEventListener('touchmove', resetCountdown);\r\n  window.addEventListener('scroll', resetCountdown);\r\n  window.addEventListener('resize', resetCountdown);\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport \"./LoadSpinner.css\";\r\nexport default function LoadSpinner() {\r\n  return (\r\n    <div id=\"load-spinner\" className=\"adjusted\">\r\n      Banka&nbsp;\r\n      <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { loginAction } from \"../../actions/userActions\";\r\nimport \"./Login.css\";\r\nimport LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      isLoading: false,\r\n      translateContainer: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  handleOnChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ isLoading: true });\r\n    const { username, password } = this.state;\r\n\r\n    const userCredentials = {\r\n      username,\r\n      password,\r\n    };\r\n    const { loginAction, history } = this.props;\r\n    loginAction(userCredentials, history);\r\n  };\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n        isLoading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  translateContainer = () => {\r\n    this.setState({\r\n      translateContainer: !this.state.translateContainer,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { username, password, isLoading, errors } = this.state;\r\n    const { loginCredentials, isValidToken } = this.props.login;\r\n\r\n    if (loginCredentials && isValidToken) {\r\n      return (\r\n        <div className=\"login\">\r\n          <div className=\"login-header\">\r\n            <div className=\"login-notification\">\r\n              <i className=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\r\n              <p>notifications</p>\r\n            </div>\r\n            <div className=\"login-logo\">\r\n              <h1>\r\n                Banka&nbsp;\r\n                <i\r\n                  className=\"fa fa-university logo-icon\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"logged-in\">\r\n            <h3>\r\n              Hi, <strong>{loginCredentials.fullname}</strong>\r\n            </h3>\r\n            <p className=\"logged-in-p\">\r\n              Hope you are enjoying a seamless banking experience?\r\n            </p>\r\n            <p className=\"logged-in-p\">\r\n              You currently do not have any notification, as soon as one comes\r\n              up we'll let you know!\r\n            </p>\r\n            <Link to=\"/dashboard\" className=\"logged-in-btn\">\r\n              {\"<<\"} Back to dashboard\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let translate = \"extra-container\";\r\n    let handIcon = (\r\n      <p className=\"login-info\">\r\n        To signup or reset password click the hand icon below\r\n      </p>\r\n    );\r\n    let info = <i className=\"fa fa-hand-o-left\" aria-hidden=\"true\"></i>;\r\n    if (this.state.translateContainer) {\r\n      translate = \"extra-container translate\";\r\n      info = <i className=\"fa fa-lightbulb-o\" aria-hidden=\"true\"></i>;\r\n      handIcon = \"\";\r\n    }\r\n\r\n    let isLoader = (\r\n      <button type=\"submit\" className=\"login-btn\">\r\n        <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i>\r\n      </button>\r\n    );\r\n\r\n    if (isLoading) {\r\n      isLoader = <LoadSpinner />;\r\n    }\r\n\r\n    let displayErrorMessage = \"\";\r\n\r\n    if (errors.credential || errors.username || errors.password) {\r\n      displayErrorMessage = (\r\n        <div className=\"login-err-mesg\">\r\n          {\" \"}\r\n          <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\"></i>{\" \"}\r\n          &nbsp;invalid username or password\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"login-header\">\r\n          <div className=\"login-notification\">\r\n            <i className=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\r\n            <p>notifications</p>\r\n          </div>\r\n          <div className=\"login-logo\">\r\n            <h1>\r\n              Banka&nbsp;\r\n              <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n            </h1>\r\n          </div>\r\n        </div>\r\n\r\n        {displayErrorMessage}\r\n        <form className=\"login-form\" onSubmit={this.handleOnSubmit}>\r\n          <div className=\"form-wrapper\">\r\n            <div className=\"input-container\">\r\n              <i className=\"fa fa-user-o icon\" aria-hidden=\"true\"></i>\r\n              <input\r\n                className=\"input-field\"\r\n                type=\"text\"\r\n                placeholder=\"username\"\r\n                name=\"username\"\r\n                onChange={this.handleOnChange}\r\n                value={username}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <i className=\"fa fa-lock icon\" aria-hidden=\"true\"></i>\r\n              <input\r\n                className=\"input-field\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                onChange={this.handleOnChange}\r\n                name=\"password\"\r\n                value={password}\r\n                required\r\n              />\r\n            </div>\r\n            {\r\n              <div className=\"input-container\">\r\n                <input\r\n                  className=\"remember-me\"\r\n                  type=\"checkbox\"\r\n                  placeholder=\"Password\"\r\n                  name=\"remember-me\"\r\n                  id=\"remember-me\"\r\n                />\r\n                <label htmlFor=\"remember-me\" id=\"checkbox-label\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n            }\r\n          </div>\r\n          {isLoader}\r\n        </form>\r\n\r\n        {handIcon}\r\n        <div className={translate} onClick={this.translateContainer}>\r\n          <div className=\"login-extra\">\r\n            <Link to=\"/signup\">\r\n              <i className=\"fa fa-unlock\" aria-hidden=\"true\">\r\n                {\" \"}\r\n                sign up\r\n              </i>\r\n            </Link>\r\n\r\n            <Link to=\"/forgot-password\" className=\"login-extra-space\">\r\n              <i className=\"fa fa-history\" aria-hidden=\"true\">\r\n                {\" \"}\r\n                &nbsp; forgot password?\r\n              </i>\r\n            </Link>\r\n\r\n            <Link to=\"/user-guide\">\r\n              <i className=\"fa fa-book\" aria-hidden=\"true\">\r\n                {\" \"}\r\n                &nbsp; user guide\r\n              </i>\r\n            </Link>\r\n          </div>\r\n          <div className=\"show-extra\">{info}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginAction: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  login: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.login,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginAction })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Signup.css\";\r\nimport { signupAction } from \"../../actions/userActions\";\r\n\r\nclass SignUp extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.phoneNumber = \"\";\r\n    this.password = \"\";\r\n    this.confirmPassword = \"\";\r\n\r\n    this.state = {\r\n      fullname: \"\",\r\n      sex: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      isLoading: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  handleOnChange = (event) => {\r\n    const [name, value] = [event.target.name, event.target.value];\r\n    this.setState({ [name]: value });\r\n    \r\n    if (name === \"phoneNumber\") {this.phoneNumber = value};\r\n    if (name === \"password\") {this.password = value};\r\n    if (name === \"confirmPassword\") {this.confirmPassword = value};\r\n    \r\n    if(this.phoneNumber.length === 11\r\n      && this.password.length > 5\r\n      && this.password.length > 5 \r\n      && this.password === this.confirmPassword) \r\n      { this.setState({errors: {}})};\r\n\r\n    // validation for phone number\r\n    if (name === \"phoneNumber\" && value.length > 1) {\r\n      let phoneNumberError = {};\r\n      let firstTwoDigits = value.substring(0, 2);\r\n      if (\r\n        firstTwoDigits !== \"07\" &&\r\n        firstTwoDigits !== \"08\" &&\r\n        firstTwoDigits !== \"09\"\r\n      ) {\r\n        phoneNumberError.phoneNumber =\r\n          \"invalid format - phone number must start with 07, 08 or 09\";\r\n        this.setState({ errors: phoneNumberError });\r\n      }\r\n\r\n      // check if from the third number are all digits\r\n      else if (value.length > 2 && !/^\\d+$/.test(value.substring(2))) {\r\n        phoneNumberError.phoneNumber = \"phone number must all be digits\";\r\n        this.setState({ errors: phoneNumberError });\r\n      }else if (value.length !== 11) {\r\n        phoneNumberError.phoneNumber = \"phone number must be 11 digits\";\r\n        this.setState({ errors: phoneNumberError });\r\n      } else {\r\n        this.setState({ errors: phoneNumberError });\r\n      }\r\n    }\r\n    \r\n    //  validation for confirm password\r\n    if (name === \"confirmPassword\" && value.length > 0) {\r\n      let confirmPasswordError = {};\r\n      const { password } = this.state;\r\n      if (password.length < 6) {\r\n        confirmPasswordError.confirmPassword =\r\n          \"fill in password field first which cannot be empty or less than six characters\";\r\n        this.setState({ errors: confirmPasswordError, confirmPassword: \"\" });\r\n        return;\r\n      }\r\n\r\n      if (value !== password) {\r\n        confirmPasswordError.confirmPassword = \"passwords must match\";\r\n        this.setState({ errors: confirmPasswordError });\r\n      } else {\r\n        this.setState({ errors: confirmPasswordError });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ isLoading: true });\r\n    const {\r\n      fullname,\r\n      sex,\r\n      phoneNumber,\r\n      email,\r\n      username,\r\n      password,\r\n      confirmPassword,\r\n    } = this.state;\r\n\r\n    const userDetails = {\r\n      fullname,\r\n      sex,\r\n      phoneNumber,\r\n      email,\r\n      username,\r\n      password,\r\n      confirmPassword,\r\n    };\r\n    const { signupAction, history } = this.props;\r\n    signupAction(userDetails, history, userDetails.fullname);\r\n  };\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n        isLoading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      fullname,\r\n      phoneNumber,\r\n      email,\r\n      username,\r\n      password,\r\n      confirmPassword,\r\n      isLoading,\r\n      errors,\r\n    } = this.state;\r\n\r\n    let submitBtnClassName = \"\";\r\n    let btnNotAllowSubmit = \"\"; // allows submit by default\r\n\r\n    // check if errors object is empty\r\n    if (\r\n      !errors ||\r\n      (Object.keys(errors).length === 0 && errors.constructor === Object)\r\n    ) {\r\n      submitBtnClassName = \"register-btn\";\r\n      btnNotAllowSubmit = false;\r\n    } else {\r\n      submitBtnClassName = \"register-btn error\";\r\n      btnNotAllowSubmit = true;\r\n    }\r\n\r\n    let isLoader = (\r\n      <button\r\n        type=\"submit\"\r\n        className={submitBtnClassName}\r\n        disabled={btnNotAllowSubmit}\r\n      >\r\n        Submit\r\n      </button>\r\n    );\r\n\r\n    if (isLoading) {\r\n      isLoader = (\r\n        <div id=\"logo-spinner\">\r\n          Banka&nbsp;\r\n          <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"signup\">\r\n        <div className=\"signup-logo\">\r\n          <h3>\r\n            <a href=\"/\">\r\n              Banka&nbsp;\r\n              <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n            </a>\r\n          </h3>\r\n        </div>\r\n        <h2 id=\"signup-h2\">Sign Up</h2>\r\n        <h4>Create An Account</h4>\r\n        <form className=\"signup-form\" onSubmit={this.handleOnSubmit}>\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"text\"\r\n              placeholder=\"fullname\"\r\n              name=\"fullname\"\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              value={fullname}\r\n              minLength=\"4\"\r\n              required\r\n            />\r\n            {errors.fullname && (\r\n              <span className=\"error-message\">{errors.fullname}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"signup-container radio\">\r\n            <h3>Select gender</h3>\r\n            <label htmlFor=\"male\" className=\"label-gender\">\r\n              male\r\n              <input\r\n                type=\"radio\"\r\n                name=\"sex\"\r\n                id=\"male\"\r\n                onChange={this.handleOnChange}\r\n                disabled={isLoading}\r\n                value=\"M\"\r\n                required\r\n              />\r\n            </label>\r\n            <label htmlFor=\"female\" className=\"label-gender\">\r\n              female\r\n              <input\r\n                type=\"radio\"\r\n                name=\"sex\"\r\n                id=\"female\"\r\n                onChange={this.handleOnChange}\r\n                disabled={isLoading}\r\n                value=\"F\"\r\n                required\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"others\" className=\"label-gender\">\r\n              others\r\n              <input\r\n                type=\"radio\"\r\n                name=\"sex\"\r\n                id=\"others\"\r\n                onChange={this.handleOnChange}\r\n                disabled={isLoading}\r\n                value=\"-\"\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"tel\"\r\n              minLength=\"11\"\r\n              maxLength=\"11\"\r\n              name=\"phoneNumber\"\r\n              placeholder=\"phone number\"\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              value={phoneNumber}\r\n              required\r\n            />\r\n            {errors.phoneNumber && (\r\n              <span className=\"error-message\">{errors.phoneNumber}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n              name=\"email\"\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              value={email}\r\n              required\r\n            />\r\n            {errors.email && (\r\n              <span className=\"error-message\">{errors.email}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              name=\"username\"\r\n              minLength=\"4\"\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              value={username}\r\n              required\r\n            />\r\n            {errors.username && (\r\n              <span className=\"error-message\">{errors.username}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"password\"\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              minLength=\"6\"\r\n              value={password}\r\n              required\r\n            />\r\n            {errors.password && (\r\n              <span className=\"error-message\">{errors.password}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"confirm password\"\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              minLength=\"6\"\r\n              value={confirmPassword}\r\n              required\r\n            />\r\n            {errors.confirmPassword && (\r\n              <span className=\"error-message\">{errors.confirmPassword}</span>\r\n            )}\r\n          </div>\r\n          {isLoader}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignUp.propTypes = {\r\n  signupAction: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signupAction })(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { forgotPasswordAction } from \"../../actions/userActions\";\r\nimport \"./ForgotPassword.css\";\r\nimport LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      errors: {},\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n        isLoading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ isLoading: true });\r\n    const email = this.state.email;\r\n    const userEmail = { email };\r\n    const { forgotPasswordAction, history } = this.props;\r\n    forgotPasswordAction(userEmail, history);\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    const { email, isLoading, errors } = this.state;\r\n    let displayErrorMessage = \"\";\r\n\r\n    if (errors.EmailSendingException) {\r\n      displayErrorMessage = (\r\n        <div className=\"login-err-mesg\">\r\n          {\" \"}\r\n          <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\"></i>{\" \"}\r\n          &nbsp;{errors.EmailSendingException}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let isLoader = (\r\n      <button type=\"submit\" className=\"register-btn\">\r\n        Submit\r\n      </button>\r\n    );\r\n\r\n    if (isLoading) {\r\n      isLoader = <LoadSpinner />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"signup\">\r\n        <div className=\"signup-logo\">\r\n          <h3>\r\n            <a href=\"/\">\r\n              Banka&nbsp;\r\n              <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n            </a>\r\n          </h3>\r\n        </div>\r\n        <h2 id=\"signup-h2\" className=\"fgt-password\">\r\n          Reset Password\r\n        </h2>\r\n        {displayErrorMessage}\r\n        <form className=\"forgot-password-form\" onSubmit={this.handleOnSubmit}>\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"email\"\r\n              placeholder=\"enter your valid email to reset password\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n            {errors.invalidCredentialException && (\r\n              <span className=\"error-message\">\r\n                {errors.invalidCredentialException}\r\n              </span>\r\n            )}\r\n          </div>\r\n          {isLoader}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForgotPassword.propTypes = {\r\n  forgotPasswordAction: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { forgotPasswordAction })(\r\n  ForgotPassword\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nimport \"./TransferFund.css\";\r\nimport { transferFundsAction } from \"../../actions/userActions\";\r\nimport LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\n\r\nclass TransferFund extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      benfAcctNum: \"\",\r\n      amount: \"\",\r\n      pin: \"\",\r\n      description: \"\",\r\n      isLoading: false,\r\n      elementsState: false,\r\n      btnText: \"Continue\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  handleOnChange = (event) => {\r\n    let benfAcctNumError = {}; \r\n    let pinError = {};\r\n    const [name, value] = [event.target.name, event.target.value];\r\n\r\n    if (name === \"benfAcctNum\") {\r\n       if (value.length === 10) {\r\n        benfAcctNumError.benfAcctNum = \"\";\r\n        this.setState({ errors: benfAcctNumError });\r\n       }\r\n\r\n       else if (value.length > 10) {\r\n        return;\r\n       }\r\n       else {\r\n        benfAcctNumError.benfAcctNum = \"account number must be 10 digits\";\r\n        this.setState({ errors: benfAcctNumError });\r\n       } \r\n    }\r\n\r\n    if (name ===\"pin\") {\r\n      if (value.length < 4 ) {\r\n        pinError.pin = \"pin must be between 4 to 8 digits\";\r\n        this.setState({ errors: pinError });\r\n      } else if (value.length > 8) {\r\n        return;\r\n      } else {\r\n        pinError.pin = \"\";\r\n        this.setState({ errors: pinError });\r\n      }\r\n    }\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.btnText === \"Continue\") {\r\n      this.setState({ elementsState: true, btnText: \"Confirm\" });\r\n      return;\r\n    }\r\n\r\n    this.setState({ isLoading: true });\r\n    const { benfAcctNum, pin, description } = this.state;\r\n    let amount = this.state.amount;\r\n\r\n    // remove commas from the amount input element caused by CurrencyFormat\r\n    amount = amount.replace(/,/g, \"\");\r\n    const transferDetails = {\r\n      benfAcctNum,\r\n      amount,\r\n      pin,\r\n      description,\r\n    };\r\n    const { transferFundsAction, history } = this.props;\r\n    transferFundsAction(transferDetails, history);\r\n  };\r\n\r\n  handleBackClick = () => {\r\n    this.setState({ elementsState: false, btnText: \"Continue\" });\r\n  };\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n        isLoading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      benfAcctNum,\r\n      amount,\r\n      pin,\r\n      description,\r\n      isLoading,\r\n      errors,\r\n      elementsState,\r\n      btnText,\r\n    } = this.state;\r\n\r\n    \r\n    let displayErrorMessage = \"\";\r\n\r\n    if (errors.invalidCredentialException) {\r\n      displayErrorMessage = (\r\n        <div className=\"login-err-mesg\">\r\n          {\" \"}\r\n          <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\"></i>{\" \"}\r\n          &nbsp;{errors.invalidCredentialException}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    let isLoader = \"\";\r\n    if (isLoading) {\r\n      isLoader = <LoadSpinner />;\r\n    }\r\n    let transferChargeLabel = \"transfer-charge-label\";\r\n    let transferChargeInput = \"transfer-charge-input\";\r\n    let backIcon = \"\";\r\n    if (elementsState) {\r\n      transferChargeLabel = \"\";\r\n      transferChargeInput = \"\";\r\n      backIcon = (\r\n        <i\r\n          className=\"fa fa-arrow-left transfer-back\"\r\n          aria-hidden=\"true\"\r\n          onClick={this.handleBackClick}\r\n        >\r\n          {\" \"}\r\n          Back\r\n        </i>\r\n      );\r\n    }\r\n    let transferBtn = \"transfer-btn\"\r\n    if (isLoading) {\r\n         transferBtn += \"-hide\";\r\n       }\r\n            \r\n    return (\r\n      <div className=\"transfer-fund\">\r\n        {backIcon}\r\n        <form className=\"transfer-form\" onSubmit={this.handleOnSubmit}>\r\n          <div className=\"signup-logo\">\r\n            <h3>\r\n              <a href=\"/dashboard\">\r\n                Banka&nbsp;\r\n                <i\r\n                  className=\"fa fa-university logo-icon\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              </a>\r\n            </h3>\r\n          </div>\r\n          <h2 id=\"signup-h2\">Send Money</h2>\r\n          {isLoader}\r\n          {displayErrorMessage}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"benfAcctNum\" className=\"transfer-label extra\">\r\n              Beneficiary Acct Number\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"benfAcctNum\"\r\n              name=\"benfAcctNum\"\r\n              value={benfAcctNum}\r\n              onChange={this.handleOnChange}\r\n              minLength=\"10\"\r\n              maxLength=\"10\"\r\n              disabled={elementsState}\r\n              placeholder=\"enter beneficiary's account number\"\r\n              required\r\n            />\r\n           \r\n            {errors.benfAcctNum && (\r\n              <span className=\"error-message\">{errors.benfAcctNum}</span>\r\n            )}\r\n            <label htmlFor=\"amount\" className=\"transfer-label extra\">\r\n              Amount(naira)\r\n            </label>\r\n            <CurrencyFormat\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              value={amount}\r\n              onChange={this.handleOnChange}\r\n              placeholder=\"enter amount\"\r\n              disabled={elementsState}\r\n              thousandSeparator={true}\r\n              // suffix={\".00\"}\r\n              required\r\n            />\r\n            {errors.amount && (\r\n              <span className=\"error-message\">{errors.amount}</span>\r\n            )}\r\n            <label className=\"transfer-label extra\" id={transferChargeLabel}>\r\n              Transfer Charge(naira)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              disabled\r\n              value=\"25.00\"\r\n              id=\"charges\"\r\n              className={transferChargeInput}\r\n            />\r\n            <label htmlFor=\"description\" className=\"transfer-label extra\">\r\n              Description(optional)\r\n            </label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              id=\"description\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={this.handleOnChange}\r\n              placeholder=\"description of transaction - optional\"\r\n              disabled={elementsState}\r\n            />\r\n            {errors.description && (\r\n              <span className=\"error-message\">{errors.description}</span>\r\n            )}\r\n            <label htmlFor=\"pin\" className=\"transfer-label extra\">\r\n              Pin{\" \"}\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"trans-pin\"\r\n              id=\"pin\"\r\n              name=\"pin\"\r\n              value={pin}\r\n              onChange={this.handleOnChange}\r\n              placeholder=\"enter four to eight digits transfer pin\"\r\n              disabled={elementsState}\r\n              required\r\n            />\r\n            {errors.pin && <span className=\"error-message\">{errors.pin}</span>}\r\n          </div>\r\n          \r\n          <button type=\"submit\" className={transferBtn}>\r\n            {btnText}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTransferFund.propTypes = {\r\n  transferFundsAction: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { transferFundsAction })(TransferFund);\r\n\r\n\r\n\r\n\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport const errorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LOGIN, UPDATETRANSACTION } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  isValidToken: false,\r\n  loginCredentials: {},\r\n};\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      const isPayload = action.payload ? true : false;\r\n      return {\r\n        ...state,\r\n        isValidToken: isPayload,\r\n        loginCredentials: action.payload,\r\n      };\r\n\r\n    case UPDATETRANSACTION: \r\n      state.loginCredentials.transactions = action.payload;\r\n      return {\r\n       ...state,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FULLNAME } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  fullname: \"\"\r\n};\r\n\r\nexport const fullnameReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FULLNAME:\r\n      return {\r\n        fullname: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TRANSFERFUND} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  transferFund: {}\r\n};\r\n\r\nexport const transferFundReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TRANSFERFUND:\r\n      return {\r\n        ...state,\r\n        transferFund: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","\r\nimport { TRACK_TRANSACTIONS, GET_TRANSACTION_BY_ID } from \"../actions/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n  trackedTransactions: [],\r\n  getTransactionsById: []\r\n};\r\n\r\nexport const adminReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n      case TRACK_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        trackedTransactions: action.payload,\r\n      };\r\n\r\n      case GET_TRANSACTION_BY_ID:\r\n      return {\r\n        ...state,\r\n        getTransactionsById: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { errorReducer } from \"./errorReducer\";\r\nimport { loginReducer } from \"./loginReducer\";\r\nimport { fullnameReducer } from \"./fullnameReducer\";\r\nimport { transferFundReducer } from \"./transferFundReducer\";\r\nimport { adminReducer } from \"./adminReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  login: loginReducer,\r\n  fullname: fullnameReducer,\r\n  transferFund: transferFundReducer,\r\n  admin: adminReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n\r\nconst reactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && reactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), reactReduxDevTools)\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SecuredRoute = ({ component: Component, user, ...otherProps }) => (\r\n\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) => {\r\n        if (user.isValidToken) {\r\n            if(user.loginCredentials.roles.includes(\"ROLE_CASHIER\") || user.loginCredentials.roles.includes(\"ROLE_ADMIN\")) {\r\n               return  <Redirect to=\"/admin-dashboard\" />\r\n            } else {\r\n              return <Component {...props} />\r\n            }\r\n        } else {\r\n          return  <Redirect to=\"/\" />\r\n        }\r\n    }\r\n  } \r\n  />\r\n  \r\n  // <Route\r\n    \r\n  //   {...otherProps}\r\n  //   render={(props) =>\r\n  //     user.isValidToken ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      \r\n  //   }\r\n  // />\r\n\r\n  // <Route\r\n  //   {...otherProps}\r\n  //   render={(props) => {\r\n  //       if (user.isValidToken) {\r\n  //           if(user.roles.includes(\"ROLE_USER\")) {\r\n  //              return <Component {...props} />\r\n  //           } else {\r\n  //             return  <Redirect to=\"/admin-dashboard\" />\r\n  //           }\r\n  //       } else {\r\n  //         return  <Redirect to=\"/\" />\r\n  //       }\r\n  //   }\r\n  // } \r\n  // />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.login,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n\r\n/**\r\n * <Route\r\n    {...otherProps}\r\n    render={(props) => {\r\n        if (user.isValidToken) {\r\n            if(user.roles.includes(\"ROLE_CASHIER\") || user.roles.includes(\"ROLE_ADMIN\")) {\r\n               return <Component {...props} />\r\n            } else {\r\n              return  <Redirect to=\"/dashboard\" />\r\n            }\r\n        } else {\r\n          return  <Redirect to=\"/\" />\r\n        }\r\n    }\r\n  } \r\n  />\r\n */","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CashierAdminRoute = ({ component: Component, user, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) => {\r\n        if (user.isValidToken) {\r\n            if(user.loginCredentials.roles.includes(\"ROLE_CASHIER\") || user.loginCredentials.roles.includes(\"ROLE_ADMIN\")) {\r\n               return <Component {...props} />\r\n            } else {\r\n              return  <Redirect to=\"/dashboard\" />\r\n            }\r\n        } else {\r\n          return  <Redirect to=\"/\" />\r\n        }\r\n    }\r\n  } \r\n  />\r\n);\r\n\r\nCashierAdminRoute.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.login,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CashierAdminRoute);","import React from \"react\";\r\n\r\nimport \"./Logo.css\";\r\nexport default function Logo() {\r\n  return (\r\n    <div className=\"login-logo dashboard\">\r\n      <h1>\r\n        Banka&nbsp;\r\n        <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nimport \"./TransferDetails.css\";\r\nclass TransferDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { date, description, amount, transactionType } = this.props;\r\n    let transactionClass = \"transfer-amount \";\r\n    if (transactionType === \"DEBIT\") transactionClass += \"debit\";\r\n    return (\r\n      <div className=\"transfer-details\">\r\n        <div className=\"transfer-detail\">\r\n          <div className=\"transfer-descriptions\">\r\n            <p>{date}</p>\r\n            <h4>{description}</h4>\r\n          </div>\r\n          {amount &&\r\n          <div className={transactionClass}>\r\n            &#x20A6;\r\n            <CurrencyFormat\r\n              value={amount}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n            />\r\n            {\".00\"}\r\n          </div>\r\n  }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransferDetails;\r\n","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport \"./LineChart.css\";\r\n\r\nclass LineChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: [0, 0, 0, 0, 0]\r\n        }\r\n    }\r\n\r\n    async componentDidMount () {\r\n      const response = await axios.get(`/api/v1/users/get-transactions-for-this-month`);\r\n      const dateArr = response.data;\r\n      const newData = [0, 0, 0, 0, 0];\r\n\r\n        for (let i=0; i<dateArr.length; i++) {\r\n            let str = dateArr[i];\r\n            str = str.substr(8,2);\r\n            if(str < 8) {\r\n               newData[0] = ++newData[0];\r\n            } else if(str < 15) {\r\n                newData[1] = ++newData[1];\r\n            }else if(str < 22) {\r\n                newData[2] = ++newData[2];\r\n            } else{\r\n                newData[4] = ++newData[4];\r\n            }\r\n        } \r\n\r\n        this.setState({data: newData});\r\n    }\r\n\r\n    render() {\r\n        const date = new Date();  \r\n        const currentMonth = date.toLocaleString('default', { month: 'long' });\r\n        let data = {\r\n            labels: ['1-7', '8-14', '15-21', '21-28', '29+'],\r\n            datasets: [{\r\n                label: `Weekly transactions for the month of ${currentMonth}`,\r\n                data: this.state.data,\r\n                backgroundColor: [\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    \r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    \r\n                   \r\n                    'rgba(153, 102, 255, 1)'\r\n                   \r\n                ],\r\n                borderWidth: 0.5\r\n            }]\r\n        };\r\n       let options = {\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n                <Line  data={data} options={options} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LineChart;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutAction } from \"../../actions/userActions\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nimport Logo from \"../Logo/Logo\";\r\nimport TransferDetails from \"./TransferDetails\";\r\nimport LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\nimport LineChart from \"../Chart/LineChart\";\r\n\r\nimport \"./Dashboard.css\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dashboardClass: \"dashboard\",\r\n      sidebarClass: \"dashboard-sidebar\",\r\n      isLoading: false,\r\n      accountBalance: \"\",\r\n    };\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.logoutAction();\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true });\r\n    const accountInfo = await this.getAccountDetails();\r\n\r\n    this.setState({\r\n      accountBalance: accountInfo.accountBalance,\r\n    });\r\n    this.setState({ isLoading: false });\r\n  };\r\n\r\n  getAccountDetails = async () => {\r\n    const accountInfo = await axios.get(`/api/v1/users/get-account-info`);\r\n    return accountInfo.data;\r\n  };\r\n\r\n  // const [dashboardClass, setDashboardClass] = useState(\"dashboard\");\r\n  // const [sidebarClass, setsidebarClass] = useState(\"dashboard-sidebar\");\r\n\r\n  handleOnClick = () => {\r\n    this.state.dashboardClass === \"dashboard\"\r\n      ? this.setState({ dashboardClass: \"dashboard translate\" })\r\n      : this.setState({ dashboardClass: \"dashboard\" });\r\n\r\n    this.state.sidebarClass === \"dashboard-sidebar\"\r\n      ? this.setState({ sidebarClass: \"dashboard-sidebar translate\" })\r\n      : this.setState({ sidebarClass: \"dashboard-sidebar\" });\r\n  };\r\n\r\n//   capitalize  = (string) => {\r\n//     return string && string[0].toUpperCase() + string.slice(1).toLowerCase();\r\n// }\r\n\r\n\r\n  render() {\r\n    const {accountBalance} = this.state;\r\n    const { isLoading } = this.state;\r\n    let isLoader = \"\";\r\n\r\n    if (isLoading) {\r\n      isLoader = <LoadSpinner />;\r\n    }\r\n\r\n    const {login} = this.props;\r\n   // const {transferFund} = this.props;\r\n\r\n\r\n    const transactions = login.loginCredentials.transactions;\r\n    \r\n    let res = transactions.map(trans =>{\r\n      \r\n      return(\r\n        <TransferDetails\r\n        key={trans.transactionId}\r\n        date={trans.created_At}\r\n        description={trans.description}\r\n        amount={trans.amount}\r\n        transactionType={trans.transactionType}\r\n      />\r\n    \r\n     )\r\n    });\r\n\r\n    if(res.length === 0) {\r\n      res = (\r\n        <TransferDetails\r\n        date=\"\"\r\n        description=\"You have no transaction yet, your last five transactions \r\n        will be displayed here. You have been given a #25000 bonus so as to be \r\n        able to make transfers, you don't have to thank us for that 😎\"\r\n        amount=\"\"\r\n        transactionType=\"\"\r\n      />\r\n      );\r\n     \r\n    }\r\n    \r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.state.dashboardClass}>\r\n          <div className=\"dashboard-top\">\r\n            <div className=\"dashboard-nav\">\r\n              <div className=\"dashboard-hamburger\">\r\n                <input type=\"checkbox\" id=\"checkbox-hack\" />\r\n                <label htmlFor=\"checkbox-hack\" id=\"checkbox-hack-label\">\r\n                  <div id=\"hamburger\" onClick={this.handleOnClick}>\r\n                    <span id=\"span1\"></span>\r\n                    <span id=\"span2\"></span>\r\n                    <span id=\"span3\"></span>\r\n                  </div>\r\n                </label>\r\n              </div>\r\n              <h3 className=\"dashboard-account-info\">Account Info</h3>\r\n              <div className=\"logout\" title=\"logout\">\r\n                <i\r\n                  className=\"fa fa-sign-out dashboard-logout\"\r\n                  aria-hidden=\"true\"\r\n                  onClick={this.logout}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n\r\n            {isLoader}\r\n            <div className=\"dashboard-account\">\r\n              <div className=\"dashboard-account-details\">\r\n                <p>Savings - {login.loginCredentials.acctNum || \"invalid\"} </p>\r\n                <h4>\r\n                  &#x20A6;\r\n                  <CurrencyFormat\r\n                    value={accountBalance || \"----\"}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                  />\r\n                  {\".00\"}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"chart\">\r\n              <LineChart />\r\n            </div>\r\n          </div>\r\n          {res}\r\n        </div>\r\n        <div className={this.state.sidebarClass}>\r\n          <Logo className=\"dashboard-logo\" />\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/transfer-funds\">\r\n                <i className=\"fa fa-share\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;Transfer Funds\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"\" onClick={ (event) => event.preventDefault() } title=\"not implemented yet\">\r\n                <i className=\"fa fa-money\" aria-hidden=\"true\"></i>\r\n                &nbsp; Airtime and Bill Payment\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"change-pin\">\r\n                <i className=\"fa fa-key\" aria-hidden=\"true\"></i> &nbsp;Change\r\n                Pin\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"forgot-pin\">\r\n                <i className=\"fa fa-lock\" aria-hidden=\"true\"></i> &nbsp;Forgot Pin\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"dummy-accounts\">\r\n                <i className=\"fa fa-users\" aria-hidden=\"true\"></i> &nbsp;Dummy\r\n                Accounts\r\n              </Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/profile\">\r\n                <i className=\"fa fa-user-secret\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;Profile\r\n              </Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/\" onClick={ (event) => event.preventDefault() } title=\"not implemented yet\">\r\n                <i className=\"fa fa-credit-card\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;Shop With Card\r\n              </Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/logout\">\r\n                <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;Logout\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  logoutAction: PropTypes.func.isRequired,\r\n  login: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.login,\r\n  transferFund: state.transferFund.transferFund,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutAction })(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { forgotPinAction } from \"../../actions/userActions\";\r\nimport \"./ForgotPin.css\";\r\nimport LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\n\r\nclass ForgotPin extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      errors: {},\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n        isLoading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ isLoading: true });\r\n    const email = this.state.email;\r\n    const userEmail = { email };\r\n    const { forgotPinAction, history } = this.props;\r\n    forgotPinAction(userEmail, history);\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    const { email, isLoading, errors } = this.state;\r\n    let displayErrorMessage = \"\";\r\n\r\n    if (errors.EmailSendingException) {\r\n      displayErrorMessage = (\r\n        <div className=\"login-err-mesg\">\r\n          {\" \"}\r\n          <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\"></i>{\" \"}\r\n          &nbsp;{errors.EmailSendingException}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let isLoader = (\r\n      <button type=\"submit\" className=\"register-btn\">\r\n        Submit\r\n      </button>\r\n    );\r\n\r\n    if (isLoading) {\r\n      isLoader = <LoadSpinner />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"signup\">\r\n        <div className=\"signup-logo\">\r\n          <h3>\r\n            <a href=\"/\">\r\n              Banka&nbsp;\r\n              <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n            </a>\r\n          </h3>\r\n        </div>\r\n        <h2 id=\"signup-h2\" className=\"fgt-password\">\r\n          Reset Pin\r\n        </h2>\r\n        {displayErrorMessage}\r\n        <form className=\"forgot-password-form\" onSubmit={this.handleOnSubmit}>\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"email\"\r\n              placeholder=\"enter your valid email to reset pin\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n            {errors.invalidCredentialException && (\r\n              <span className=\"error-message\">\r\n                {errors.invalidCredentialException}\r\n              </span>\r\n            )}\r\n          </div>\r\n          {isLoader}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForgotPin.propTypes = {\r\n  forgotPinAction: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { forgotPinAction })(\r\n  ForgotPin\r\n);\r\n","export const isObjectEmpty = (obj) => {\r\n  return !obj || (Object.keys(obj).length === 0 && obj.constructor === Object);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { changePinAction } from \"../../actions/userActions\";\r\nimport LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\nimport { isObjectEmpty } from \"../../HelperFunctions/isObjectEmpty\";\r\n\r\nclass ChangePin extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.currentPin = \"\";\r\n    this.newPin = \"\";\r\n    this.confirmNewPin = \"\";\r\n\r\n    this.state = {\r\n      currentPin: \"\",\r\n      newPin: \"\",\r\n      confirmNewPin: \"\",\r\n      isLoading: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n        isLoading: false,\r\n      });\r\n      \r\n    }\r\n    \r\n  };\r\n\r\n  handleOnChange = (event) => {\r\n    const [name, value] = [event.target.name, event.target.value];\r\n   \r\n    if (name ===\"currentPin\") {\r\n      this.currentPin = value;\r\n      let currentPinError = {};\r\n      if (value.length < 4 ) {\r\n        currentPinError.currentPin = \"pin must be between 4 to 8 digits\";\r\n        this.setState({ errors: currentPinError });\r\n      } else if (value.length > 8) {\r\n        return;\r\n      } else {\r\n        currentPinError.pin = \"\";\r\n        this.setState({ errors: currentPinError });\r\n      }\r\n    }\r\n\r\n    if (name ===\"newPin\") {\r\n      this.newPin = value;\r\n      let newPinError = {};\r\n      if (value.length < 4 ) {\r\n        newPinError.newPin = \"pin must be between 4 to 8 digits\";\r\n        this.setState({ errors: newPinError });\r\n      } else if (value.length > 8) {\r\n        return;\r\n      } else {\r\n        newPinError.pin = \"\";\r\n        this.setState({ errors: newPinError });\r\n      }\r\n    }\r\n\r\n    //  validation for confirm new pin\r\n    if (name === \"confirmNewPin\" && value.length > 0) {\r\n      this.confirmNewPin = value;\r\n      let confirmNewPinError = {};\r\n      let newPinError = {};\r\n      const { newPin } = this.state;\r\n\r\n      if (value.length < 4 ) {\r\n        newPinError.newPin = \"pin must be between 4 to 8 digits\";\r\n        this.setState({ errors: newPinError });\r\n      }\r\n\r\n      if (value.length > 8) {\r\n        return;\r\n      }\r\n\r\n      if (newPin.length < 4 ) {\r\n          confirmNewPinError.confirmNewPin =\r\n          \"fill in  new pin field first which cannot be empty or less than four characters\";\r\n        this.setState({ errors: confirmNewPinError, confirmNewPin: \"\" });\r\n        return;\r\n      }\r\n\r\n      if (value !== this.state.newPin) {\r\n        confirmNewPinError.confirmNewPin = \"pins must match\";\r\n        this.setState({ errors: confirmNewPinError });\r\n      } else {\r\n        this.setState({ errors: confirmNewPinError });\r\n      }\r\n    }\r\n    this.setState({ [name]: value });\r\n    if((this.currentPin.length > 3 && this.currentPin.length < 9) \r\n    && (this.newPin.length > 3 && this.newPin.length < 9) \r\n    && ( this.newPin ===  this.confirmNewPin)) {\r\n      this.setState({errors: {}});\r\n    }\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ isLoading: true });\r\n\r\n    const { currentPin, newPin, confirmNewPin } = this.state;\r\n\r\n    const pinCredentials = {\r\n      currentPin,\r\n      newPin,\r\n      confirmNewPin,\r\n    };\r\n    const { changePinAction, history } = this.props;\r\n    changePinAction(pinCredentials, history);\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { currentPin, newPin, confirmNewPin, isLoading, errors } = this.state;\r\n    let submitBtnClassName = \"\";\r\n    let btnNotAllowSubmit = \"\"; // allows submit by default\r\n\r\n    if (isObjectEmpty(errors)) {\r\n      submitBtnClassName = \"register-btn\";\r\n      btnNotAllowSubmit = false;\r\n    } else {\r\n      submitBtnClassName = \"register-btn error\";\r\n      btnNotAllowSubmit = true;\r\n    }\r\n    \r\n    // If there is an error from the server, allow btn submit\r\n    if(errors.invalidCredentialException) {\r\n      submitBtnClassName = \"register-btn\";\r\n      btnNotAllowSubmit = false;\r\n    }\r\n\r\n    let isLoader = (\r\n      <button\r\n        type=\"submit\"\r\n        className={submitBtnClassName}\r\n        disabled={btnNotAllowSubmit}\r\n      >\r\n        Submit\r\n      </button>\r\n    );\r\n\r\n    if (isLoading) {\r\n      isLoader = <LoadSpinner />;\r\n    }\r\n    \r\n    let displayErrorMessage = \"\";\r\n\r\n    if (errors.invalidCredentialException) {\r\n      displayErrorMessage = (\r\n        <div className=\"login-err-mesg\">\r\n          {\" \"}\r\n          <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\"></i>{\" \"}\r\n          &nbsp;{errors.invalidCredentialException}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n\r\n    return (\r\n      <div className=\"signup\">\r\n        <div className=\"signup-logo\">\r\n          <h3>\r\n            <a href=\"/\">\r\n              Banka&nbsp;\r\n              <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n            </a>\r\n          </h3>\r\n        </div>\r\n        <h2 id=\"signup-h2\" className=\"fgt-password\">\r\n          Change Pin \r\n        </h2>\r\n        \r\n        {displayErrorMessage}\r\n        <form className=\"change-pin-form\" onSubmit={this.handleOnSubmit}>\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input trans-pin\"\r\n              type=\"number\"\r\n              placeholder=\"enter your current pin\"\r\n              name=\"currentPin\"\r\n              disabled={isLoading}\r\n              onChange={this.handleOnChange}\r\n              value={currentPin}\r\n              required\r\n            />\r\n            {errors.currentPin && <span className=\"error-message\">{errors.currentPin}</span>}\r\n          </div>\r\n\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input trans-pin\"\r\n              type=\"number\"\r\n              placeholder=\"enter new pin\"\r\n              name=\"newPin\"\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              value={newPin}\r\n              required\r\n            />\r\n            {errors.newPin && (\r\n              <span className=\"error-message\">{errors.newPin}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input trans-pin\"\r\n              type=\"number\"\r\n              placeholder=\"confirm new pin\"\r\n              name=\"confirmNewPin\"\r\n              value={confirmNewPin}\r\n              disabled={isLoading}\r\n              onChange={this.handleOnChange}\r\n              required\r\n            />\r\n            {errors.confirmNewPin && (\r\n              <span className=\"error-message\">{errors.confirmNewPin}</span>\r\n            )}\r\n          </div>\r\n\r\n          {isLoader}\r\n          \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChangePin.propTypes = {\r\n  changePinAction: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { changePinAction })(ChangePin);\r\n","import React, { Component } from \"react\";\r\n\r\nimport img1 from \"../../assets/images/img1.PNG\";\r\nimport \"./UserProfile.css\";\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"userProfile\">\r\n        <div className=\"signup-logo\">\r\n          <h3>\r\n            <a href=\"/dashboard\">\r\n              Banka&nbsp;\r\n              <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n            </a>\r\n          </h3>\r\n        </div>\r\n        <h3 className=\"dummy-accounts-h3\">Profile Page</h3>\r\n        <div className=\"userProfile-img\">\r\n          <img src={img1} alt=\"profile\" id=\"profile-image\" />\r\n        </div>\r\n        <div className=\"userProfile-details\">\r\n          <p>\r\n            <strong>Name</strong> : Akeni Promise\r\n          </p>\r\n          <p>\r\n            <strong>Email</strong> : ***ni.prom***@yahoo.com\r\n          </p>\r\n          <p>\r\n            <strong>Phone</strong>: **0629313**\r\n          </p>\r\n\r\n          <p>\r\n            <strong>Username</strong>: **ar*\r\n          </p>\r\n        </div>\r\n        <form className=\"userProfile-form\"></form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport img1 from \"../../assets/images/img1.PNG\";\r\nimport img2 from \"../../assets/images/img2.PNG\";\r\n\r\nimport \"./UserGuide.css\";\r\nexport default function UserGuide() {\r\n  return (\r\n    <div className=\"user-guide\">\r\n      {\r\n        // add logo\r\n        // add documentation\r\n      }\r\n      <h2>Documentation</h2>\r\n      <div className=\"user-guide-short\">\r\n        <h3>Summary</h3>\r\n        <p className=\"user-guide-summary\">\r\n          TLDR;\r\n          <br />\r\n          There is a detailed description of how to use this app down the page\r\n          but for impatient readers, below is a summary to help you get started\r\n          asap.\r\n        </p>\r\n        <ul>\r\n          <li>Sign up</li>\r\n          <li>Activate your account by clicking the link sent to your email</li>\r\n          <li>\r\n            A four digit transfer pin(this is NOT your password) will be\r\n            generated for you upon signing up, memorize or copy it as you'll\r\n            later use it.\r\n          </li>\r\n          <li>You need to create new pin on the page the link takes you to</li>\r\n          <li>\r\n            If everything goes well, your account will be activated and credited\r\n            with some money so you can test out the functionalities of this app.\r\n            Without changing your pin, your account will not be activated which\r\n            implies you can't make transfers but can still receive money.\r\n          </li>\r\n\r\n          <li>\r\n            Now you can send money to some registered accounts called \"Dummy\r\n            Accounts\"\r\n          </li>\r\n          <li>\r\n            Now login with your credentials, this takes you to your dashboard,\r\n            click on the hamburger menu and click \"Dummy Accounts\" link on the\r\n            sidedrawer menu, this shows you few registered accounts that you can\r\n            transfer money to, copy any ACCOUNT NUMBER and go back to the\r\n            sidedrawer menu and click \"Transfer Funds\" link and perform your\r\n            transaction.\r\n            <p>\r\n              <img src={img1} alt=\"description image\" />\r\n              <img src={img2} alt=\"description image\" />\r\n            </p>\r\n          </li>\r\n          <p id=\"transaction-alerts\">Getting alerts</p>\r\n          <li>\r\n            You are supposed to be getting alerts everytime a transaction(you\r\n            send or receive money) occurs on your account, this feature works\r\n            but I'd have to register your number on my Twilio account and you\r\n            need to send me the verification code sent to your number since I am\r\n            using the free trial account. So as not to bug you with so much\r\n            stress of registering, you will not be getting alerts. If you want\r\n            to get alerts kindly let me know so I can register your phone number\r\n            and the customized alerts will show up everytime a transaction\r\n            occurs on your account. The drawback to this is that I have a\r\n            limited amount of money for sms that Twilio gave me, if everybody\r\n            used it, it will be exhausted in no time.\r\n          </li>\r\n\r\n          <li>\r\n            If you want to receive money you could tell anyone you know who is\r\n            registered to send you money or shoot me a mail\r\n            akeni.promise@yahoo.com and I could send you money that would make\r\n            you richer than Jeff Bezos lols.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <p className=\"user-guide-bug\">\r\n        Should you find any vulnerability/bug please let me know so I can fix it\r\n      </p>\r\n\r\n      <div className=\"user-guide-detailed\">\r\n        <h3>Detailed Description</h3>\r\n        <p className=\"user-guide-detailed-paragraph\">\r\n          This banking application is a demo application(needless to say\r\n          though), naturally, when you register for an application like this and\r\n          everything goes well, you are supposed to have (currency symbol\r\n          here)0.00 account balance and you fund the account so that you can\r\n          begin to make it operational.\r\n        </p>\r\n\r\n        <p className=\"user-guide-detailed-paragraph\">\r\n          So the first step here is to sign up with your valid credentials,\r\n          please use valid credentials because a mail will be sent to you to\r\n          activate your account after signing up.\r\n        </p>\r\n        <p className=\"user-guide-detailed-paragraph\">\r\n          Since this is a dummy account, we'll give you &#x20A6; 25,000.00 so\r\n          you can test out functionalities of the application and you don't even\r\n          need to thank us for this!\r\n        </p>\r\n        <p className=\"user-guide-detailed-paragraph\">\r\n          One question that might probably be going through your mind is,\r\n          \"Alright I understand, I now have the money in my account so who do I\r\n          transfer to?\".\r\n        </p>\r\n        <p className=\"user-guide-detailed-paragraph\">\r\n          Alright, we got you covered on that, we have created some functional\r\n          accounts that can receive money. So on your dashboard, click on the\r\n          hamburger menu(the three horizontal white lines) this shows the\r\n          sidedrawer, navigate to the \"Dummy Accounts\" and copy any account\r\n          number of your choice.\r\n        </p>\r\n        <p className=\"user-guide-detailed-paragraph\">\r\n          Go back to the dashboard and click the hamburger menu again and\r\n          navigate to \"Transfer Funds\" link, click it and everything is user\r\n          friendly from there.\r\n        </p>\r\n        <p className=\"user-guide-detailed-paragraph\">\r\n          In case you want to be getting alerts on transactions click{\" \"}\r\n          <a href=\"#transaction-alerts\">here</a>.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\nimport \"./ResetPassword.css\";\r\nimport { isObjectEmpty } from \"../../HelperFunctions/isObjectEmpty\";\r\nimport { resetPasswordAction } from \"../../actions/userActions\";\r\n\r\nclass ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      isLoading: false,\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n        isLoading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnChange = (event) => {\r\n    const [name, value] = [event.target.name, event.target.value];\r\n    this.setState({ [name]: value });\r\n\r\n    //  validation for confirm new pin\r\n    if (name === \"confirmPassword\" && value.length > 0) {\r\n      let confirmPasswordError = {};\r\n      const { password } = this.state;\r\n\r\n      if (password.length < 6) {\r\n        confirmPasswordError.confirmPassword =\r\n          \"fill in  password field first which cannot be empty or less than six characters\";\r\n        this.setState({ errors: confirmPasswordError, confirmPassword: \"\" });\r\n        return;\r\n      }\r\n\r\n      if (value !== password) {\r\n        confirmPasswordError.confirmPassword = \"passwords must match\";\r\n        this.setState({ errors: confirmPasswordError });\r\n      } else {\r\n        this.setState({ errors: confirmPasswordError });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ isLoading: true });\r\n    const { password, confirmPassword } = this.state;\r\n    const token = this.props.location.search.substr(7);\r\n    const userPassDetails = { password, confirmPassword, token };\r\n    const { resetPasswordAction, history } = this.props;\r\n    resetPasswordAction(userPassDetails, history);\r\n  };\r\n\r\n  render() {\r\n    const { password, confirmPassword, isLoading, errors } = this.state;\r\n    let submitBtnClassName = \"\";\r\n    let btnNotAllowSubmit = \"\"; // allows submit by default\r\n\r\n    if (isObjectEmpty(errors)) {\r\n      submitBtnClassName = \"register-btn\";\r\n      btnNotAllowSubmit = false;\r\n    } else {\r\n      submitBtnClassName = \"register-btn error\";\r\n      btnNotAllowSubmit = true;\r\n    }\r\n\r\n    let isLoader = (\r\n      <button\r\n        type=\"submit\"\r\n        className={submitBtnClassName}\r\n        disabled={btnNotAllowSubmit}\r\n      >\r\n        Submit\r\n      </button>\r\n    );\r\n\r\n    let isLoaderClass = \"signup\";\r\n\r\n    if (isLoading) {\r\n      isLoader = <LoadSpinner />;\r\n      isLoaderClass = \"signup loading\";\r\n    }\r\n\r\n    let displayErrorMessage = \"\";\r\n\r\n    if (errors.invalidCredentialException) {\r\n      displayErrorMessage = (\r\n        <div className=\"login-err-mesg\">\r\n          {\" \"}\r\n          <i className=\"fa fa-minus-circle\" aria-hidden=\"true\"></i> &nbsp;\r\n          {errors.invalidCredentialException}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"reset-password\">\r\n        <div className=\"signup-logo\">\r\n          <h3>\r\n            <a href=\"/\">\r\n              Banka&nbsp;\r\n              <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n            </a>\r\n          </h3>\r\n        </div>\r\n        <h2 id=\"signup-h2\" className=\"fgt-password\">\r\n          Reset Password\r\n        </h2>\r\n        {displayErrorMessage}\r\n        <form className=\"reset-password-form\" onSubmit={this.handleOnSubmit}>\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              disabled={isLoading}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"password\"\r\n              onChange={this.handleOnChange}\r\n              minLength=\"6\"\r\n              value={password}\r\n              required\r\n            />\r\n            {errors.password && (\r\n              <span className=\"error-message\">{errors.password}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input\"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"confirm password\"\r\n              onChange={this.handleOnChange}\r\n              minLength=\"6\"\r\n              disabled={isLoading}\r\n              value={confirmPassword}\r\n              required\r\n            />\r\n            {errors.confirmPassword && (\r\n              <span className=\"error-message\">{errors.confirmPassword}</span>\r\n            )}\r\n          </div>\r\n          {isLoader}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {\r\n  resetPasswordAction: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { resetPasswordAction })(ResetPassword);\r\n","import React from \"react\";\r\n\r\nimport \"./SuccessMessage.css\";\r\n\r\nconst SuccessMessage = ({message}) => {\r\n   \r\n    return (\r\n        <div className=\"success-mesg-div\">\r\n                <div className=\"circle white\">\r\n                    <div className=\"circle green\">\r\n                      <div className=\"status-info-success-mark trans-mark\">\r\n                        </div>  \r\n                        {/*<div className=\"success-white-tick\">\r\n                        \r\n    // </div>  */}    \r\n                    </div>\r\n                </div>\r\n                {message}\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default SuccessMessage;\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport SuccessMessage from \"../SuccessMessage/SuccessMessage\";\r\n\r\nimport \"./ConfirmRegistration.css\";\r\n\r\nconst ConfirmRegistration = (props) => {\r\n    const {fullname} = props;\r\n    const mesg = (\r\n        <div>\r\n        <h3 className=\"confirm-h3\">Congratulations, <span className=\"info-change-pin\">{fullname}</span> your  registration is now complete.</h3>\r\n        <p className=\"confirm-p\">Please login and <span className=\"info-change-pin\">change your default pin</span> for you to be fully activated!</p>\r\n        <p className=\"confirm-p\">When you registered, a default pin was sent to your mail, please login and on the dashboard click on \r\n            the hamburger menu and select change pin, enter your default pin and a new pin of your choice.</p>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"confirm-sth\">\r\n           <h1 className=\"confirm-h1\">Registration Complete</h1>\r\n           <SuccessMessage message={mesg}/>\r\n           <Link to=\"/\" className=\"trans-btn got-it-btn\">\r\n                Login\r\n              </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    fullname: state.fullname.fullname,\r\n  });\r\n  \r\n  export default connect(mapStateToProps, null)(ConfirmRegistration);\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// import LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\n// import StatusUpdate from \"../StatusUpdate/StatusUpdate\";\r\nimport ConfirmRegistration from \"./ConfirmRegistration\";\r\n\r\nexport const ConfirmReg = (props) => {\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n  const [status, setStatus] = useState(\"success\");\r\n  const [description, setDescription] = useState(\"registration successful\");\r\n\r\n  useEffect(() => {\r\n    getMessage();\r\n  });\r\n\r\n  const getMessage = async () => {\r\n    const token = props.location.search.substr(7);\r\n    let message = \"\";\r\n    try {\r\n      message = await axios.post(\r\n        `/api/v1/users/confirm-registration?token=${token}`\r\n      );\r\n\r\n      if (message.data.length === 0) {\r\n        // return error message\r\n        setStatus(\"error\");\r\n        setDescription(\r\n          \"Oops!\\n An error occurred, may be the server is down or you took more than 30mins to confirm registration.\"\r\n        );\r\n      }\r\n      // return message;\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <ConfirmRegistration/>\r\n  );\r\n  // return (\r\n  //   <div className=\"confirm-registration\">\r\n  //     <h1 style={{ textAlign: \"center\" }}>Confirm Registration</h1>\r\n  //     <StatusUpdate description={description} status={status} />\r\n  //   </div>\r\n  // );\r\n};\r\n\r\nexport default ConfirmReg;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// import LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\nimport \"./DummyAccounts.css\";\r\n\r\nexport default function DummyAccounts() {\r\n  const copyTextToClipBoard = (event) => {\r\n    const nextSibling = event.target.nextSibling;\r\n    setTimeout(() => {\r\n      nextSibling.style.visibility = \"visible\";\r\n    });\r\n\r\n    setTimeout(() => {\r\n      nextSibling.style.visibility = \"hidden\";\r\n    }, 3000);\r\n\r\n    event.target.nextSibling.style.visibility = \"visible\";\r\n    const getElementsId = event.target.previousSibling.id;\r\n    const inputElement = document.getElementById(getElementsId);\r\n    inputElement.select();\r\n    inputElement.setSelectionRange(0, 99999);\r\n    document.execCommand(\"copy\");\r\n  };\r\n\r\n  const [accounts, setAccounts] = useState({});\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getDummyAccounts();\r\n    let dummyAccounts = \"\";\r\n    async function getDummyAccounts() {\r\n      dummyAccounts = await axios.get(`/api/v1/users/get-dummy-accounts`);\r\n      setAccounts(dummyAccounts.data);\r\n    }\r\n  }, []);\r\n\r\n  let isLoader = \"\";\r\n  let val1 = \"no dummy account found\";\r\n  let val2 = val1;\r\n\r\n  // if (isLoading) {\r\n  //   isLoader = <LoadSpinner />;\r\n  // }\r\n\r\n  if (accounts.length > 0) {\r\n    val1 = accounts[0].accountNumber;\r\n    val2 = accounts[1].accountNumber;\r\n  }\r\n  // console.log(accounts[0].accountNumber);\r\n  return (\r\n    <div className=\"dummy-accounts\">\r\n      <div className=\"signup-logo\">\r\n        <h3>\r\n          <a href=\"/dashboard\">\r\n            Banka&nbsp;\r\n            <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n          </a>\r\n        </h3>\r\n      </div>\r\n      <h3 className=\"dummy-accounts-h3\">Dummy Accounts</h3>\r\n      <p>\r\n        Below are some functional account numbers that you can send money to:\r\n      </p>\r\n      <div className=\"clipboard-div\">\r\n        <input\r\n          type=\"text\"\r\n          value={val1}\r\n          className=\"clip-board-input\"\r\n          id=\"input-text-1\"\r\n          readOnly\r\n        />\r\n        <button\r\n          onClick={copyTextToClipBoard}\r\n          className=\"clipboard-btn\"\r\n          id=\"clipboard-btn-1\"\r\n        >\r\n          Copy To Clip Board\r\n        </button>\r\n        <i\r\n          className=\"fa fa-thumbs-up clipboard-thumbs-up\"\r\n          aria-hidden=\"true\"\r\n          id=\"clipboard-thumbs-up-1\"\r\n        ></i>\r\n      </div>\r\n\r\n      <div className=\"clipboard-div\">\r\n        <input\r\n          type=\"text\"\r\n          value={val2}\r\n          className=\"clip-board-input\"\r\n          id=\"input-text-2\"\r\n          readOnly\r\n        />\r\n        <button onClick={copyTextToClipBoard} className=\"clipboard-btn\">\r\n          Copy To Clip Board\r\n        </button>\r\n        <i\r\n          className=\"fa fa-thumbs-up clipboard-thumbs-up\"\r\n          aria-hidden=\"true\"\r\n          id=\"clipboard-thumbs-up-2\"\r\n        ></i>\r\n      </div>\r\n      {isLoader}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { updateTransactionAction } from \"../../actions/userActions\";\r\nimport { transferFundsAction } from \"../../actions/userActions\";\r\n\r\nimport \"./TransferSuccess.css\";\r\n\r\n\r\nclass TransferSuccess extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    const {updateTransactionAction, transferFund} = this.props;\r\n    updateTransactionAction(transferFund.transactions);\r\n  }\r\n\r\n    render() {\r\n      const {transferFund} = this.props;\r\n        return (\r\n            <div className=\"transfer-success\">\r\n             <div className=\"detail-div\">\r\n                <div className=\"circle white\">\r\n                    <div className=\"circle green\">\r\n                      <div className=\"status-info-success-mark trans-mark\">\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <h3>Transaction Successful</h3>\r\n                <p className=\"trans-amt\"><sup className=\"trans-sup\">NGN</sup> {transferFund.amount} </p>\r\n                <p className=\"sent-to\">was sent to</p>\r\n                <p className=\"trans-name\">{transferFund.benfAcctNum}</p>\r\n                <p className=\"trans-num\">{transferFund.beneficiary}</p>\r\n                \r\n                <hr className=\"hr\"/>\r\n                \r\n              <div className=\"ref-time\">\r\n               <p>Date & Time: {transferFund.timeOfTransaction}</p>\r\n               <p>Ref number: {transferFund.transactionId}</p>\r\n              </div>\r\n              </div>\r\n              <div className=\"trans-btns-div\">\r\n              <Link to=\"/transfer-funds\" className=\"trans-btn perform\">\r\n                Perform Another Transaction\r\n              </Link>\r\n              <Link to=\"/dashboard\" className=\"trans-btn dashboard\">\r\n                Back To Dashboard\r\n              </Link>\r\n              \r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// TransferSuccess.propTypes = {\r\n//   updateTransactionAction: PropTypes.func.isRequired,\r\n// };\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   login: state.login,\r\n//   transferFund: state.transferFund.transferFund,\r\n// });\r\n\r\n// export default connect(mapStateToProps, { logoutAction })(Dashboard);\r\n//export default TransferSuccess;\r\n\r\n// TransferSuccess.propTypes = {\r\n//   updateAcctBalAction: PropTypes.func.isRequired,\r\n  \r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  transferFund: state.transferFund.transferFund,\r\n});\r\n\r\nexport default connect(mapStateToProps, {updateTransactionAction})(TransferSuccess);","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport SuccessMessage from \"../SuccessMessage/SuccessMessage\";\r\n\r\nimport \"./ConfirmRegistration.css\";\r\n\r\nconst RegistrationSuccessful = (props) => {\r\n    const {fullname} = props;\r\n    const mesg = (\r\n        <div>\r\n        <h3 className=\"confirm-h3\">Congratulations <span className=\"info-change-pin\">{fullname}</span> your  registration was successful.</h3>\r\n        <p className=\"confirm-p\">Please check the mail you supplied when registering and click on the link in order to confirm your registration.</p>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"confirm-sth\">\r\n           <h1 className=\"confirm-h1\">Registration Successful</h1>\r\n           <SuccessMessage message={mesg}/>\r\n           <Link to=\"/\" className=\"trans-btn got-it-btn\">\r\n                OK\r\n              </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    fullname: state.fullname.fullname,\r\n  });\r\n  \r\n  export default connect(mapStateToProps, null)(RegistrationSuccessful);","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport SuccessMessage from \"../SuccessMessage/SuccessMessage\";\r\n\r\nconst ChangePinSuccessful = (props) => {\r\n\r\n    const fullname = props.login.fullname;\r\n    const mesg = (\r\n        <div>\r\n        <h3 className=\"confirm-h3\">Congratulations <span className=\"info-change-pin\">{fullname}</span>, your pin was successfully changed.</h3>\r\n        <p className=\"confirm-p\">You can now make transfers with your new pin.</p>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"confirm-sth\">\r\n           <h1 className=\"confirm-h1\">Change Pin Successful</h1>\r\n           <SuccessMessage message={mesg}/>\r\n           <Link to=\"/dashboard\" className=\"trans-btn got-it-btn\">\r\n            Back To Dashboard\r\n           </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    login: state.login.loginCredentials,\r\n  });\r\n  \r\n  export default connect(mapStateToProps, null)(ChangePinSuccessful);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SuccessMessage from \"../SuccessMessage/SuccessMessage\";\r\n\r\nimport \"./ConfirmRegistration.css\";\r\n\r\nconst ForgotPinSuccessful = () => {\r\n    const mesg = (\r\n        <div>\r\n        <h3 className=\"confirm-h3\">Congratulations, your pin reset request was successful.</h3>\r\n        <p className=\"confirm-p\">A pin reset mail has been sent to the email address you supplied.</p>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"confirm-sth\">\r\n           <h1 className=\"confirm-h1\">Pin Reset Request Successful</h1>\r\n           <SuccessMessage message={mesg}/>\r\n           <Link to=\"/reset-pin\" className=\"trans-btn got-it-btn\">\r\n                OK\r\n              </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ForgotPinSuccessful;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SuccessMessage from \"../SuccessMessage/SuccessMessage\";\r\n\r\nimport \"./ConfirmRegistration.css\";\r\n\r\nconst ForgotPasswdSuccessful = () => {\r\n    const mesg = (\r\n        <div>\r\n        <h3 className=\"confirm-h3\">Congratulations, your password reset request was successful.</h3>\r\n        <p className=\"confirm-p\">A password reset mail has been sent to the email address you supplied.</p>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"confirm-sth\">\r\n           <h1 className=\"confirm-h1\">Password Reset Request Successful</h1>\r\n           <SuccessMessage message={mesg}/>\r\n           <Link to=\"/\" className=\"trans-btn got-it-btn\">\r\n                OK\r\n              </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ForgotPasswdSuccessful;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport error404Img from '../../assets/images/error_404.jpg';\r\nimport  './Error404.css';\r\n\r\nclass Error404 extends Component {\r\n\r\n    \r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div>\r\n                  <img src={error404Img} alt=\"error404\" id=\"error404-image\"/>\r\n                <div className=\"error404msg\">\r\n                  <p className=\"p404\">The page you have requested was not found on this server.</p>\r\n                  <Link to=\"/\" className=\"error404-btn\">\r\n                     OK\r\n                 </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error404;\r\n\r\n// Dashboard.propTypes = {\r\n//     logoutAction: PropTypes.func.isRequired,\r\n//     login: PropTypes.object.isRequired,\r\n//   };\r\n  \r\n//   const mapStateToProps = (state) => ({\r\n//     login: state.login,\r\n//     transferFund: state.transferFund.transferFund,\r\n//   });\r\n  \r\n//   export default connect(mapStateToProps, { logoutAction })(Dashboard);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SuccessMessage from \"../SuccessMessage/SuccessMessage\";\r\n\r\nimport \"./ConfirmRegistration.css\";\r\n\r\nconst ResetPasswdSuccessful = () => {\r\n    const mesg = (\r\n        <div>\r\n        <h3 className=\"confirm-h3\">Congratulations, your password reset  was successful.</h3>\r\n        <p className=\"confirm-p\">You can now login with this new password.</p>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"confirm-sth\">\r\n           <h1 className=\"confirm-h1\">Password Reset Successful</h1>\r\n           <SuccessMessage message={mesg}/>\r\n           <Link to=\"/\" className=\"trans-btn got-it-btn\">\r\n                OK\r\n              </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ResetPasswdSuccessful;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './SessionTimeout.css';\r\n\r\nexport const SessionTimeOut = () => {\r\n    return (\r\n\r\n         <div className=\"session-div\">\r\n           <h3 className=\"session-h3\">Session Timeout</h3>\r\n           <div className=\"session-mesg\">\r\n              <p> <i className=\"fa fa-info-circle session-info\"></i> Your session timed out. Please login again</p>\r\n             <Link to=\"/\" className=\"session-btn\">\r\n                OK\r\n              </Link>\r\n             <div className=\"clear\"></div>\r\n        </div>  \r\n         \r\n        </div>\r\n    );\r\n}","import React, {Component} from \"react\";\r\n\r\nimport \"./AdminSuccessMesg.css\";\r\n\r\nclass  AdminSuccessMesg extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showMesg: true\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({showMesg: false});\r\n    }\r\n\r\n    hideMesg = ()=> setTimeout(() => {\r\n        this.setState({showMesg: false})\r\n     }, 10000);\r\n\r\n\r\n    render() {\r\n        let adminSuccessMesg = \"admin-success-mesg\";\r\n        if (!this.state.showMesg) {\r\n            adminSuccessMesg+= \" admin-hide-success-mesg-hide\";\r\n        }\r\n\r\n        if(this.state.showMesg) {\r\n            this.hideMesg();\r\n        }\r\n\r\n        return (\r\n            <div className={adminSuccessMesg}>\r\n              <p><span className=\"admin-check-mark\">&#10003;</span> \r\n               Your Transaction was successful \r\n               <span className=\"admin-times-mark\" onClick={this.handleClick}>&times;</span></p>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default AdminSuccessMesg;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nimport {withdrawalAction, depositAction} from \"../../../actions/adminActions\";\r\nimport LoadSpinner from \"../../../components/LoadSpinner/LoadSpinner\";\r\nimport AdminSuccessMesg from '../AdminSuccessMesg/AdminsuccessMesg';\r\n\r\nimport './InitiateTransaction.css';\r\n\r\nclass InitiateTransaction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      acctNum: \"\",\r\n      amount: \"\",\r\n      depositor: \"\",\r\n      pin: \"\",\r\n      isLoading: false,\r\n      errors: {},\r\n      apiResponse: \"\"\r\n    };\r\n  }\r\n  \r\n\r\n  handleOnChange = (event) => {\r\n    let acctNumError = {}; \r\n    let pinError = {};\r\n    const [name, value] = [event.target.name, event.target.value];\r\n\r\n    if (name === \"acctNum\") {\r\n       if (value.length === 10) {\r\n        acctNumError.acctNum = \"\";\r\n        this.setState({ errors: acctNumError });\r\n       }\r\n\r\n       else if (value.length > 10) {\r\n        return;\r\n       }\r\n       else {\r\n        acctNumError.acctNum = \"account number must be 10 digits\";\r\n        this.setState({ errors: acctNumError });\r\n       } \r\n    }\r\n\r\n    if (name ===\"pin\") {\r\n      if (value.length < 4 ) {\r\n        pinError.pin = \"pin must be between 4 to 8 digits\";\r\n        this.setState({ errors: pinError });\r\n      } else if (value.length > 8) {\r\n        return;\r\n      } else {\r\n        pinError.pin = \"\";\r\n        this.setState({ errors: pinError });\r\n      }\r\n    }\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // this.setState({ isLoading: true });\r\n    const { acctNum, pin, depositor,  apiResponse, isLoading} = this.state;\r\n    let amount = this.state.amount;\r\n    this.setState({ isLoading: true });\r\n\r\n    // remove commas from the amount input element caused by CurrencyFormat\r\n    amount = amount.replace(/,/g, \"\");\r\n    const transactionDetails = {\r\n      acctNum,\r\n      amount,\r\n      pin,\r\n    };\r\n    const {withdrawalAction, depositAction} = this.props;\r\n    let message = \"\";\r\n    if (this.props.title === \"Deposit\") {\r\n      transactionDetails.depositor = depositor;\r\n      message = depositAction(transactionDetails);\r\n    } else {\r\n      message = withdrawalAction(transactionDetails);\r\n    }\r\n\r\n    message.then(mesg => {\r\n      this.setState({apiResponse: mesg.payload, isLoading: false, pin: \"\", acctNum: \"\",  status: \"\", depositor: \"\"});\r\n    });\r\n    \r\n  };\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n        isLoading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {title} = this.props\r\n    const {\r\n      acctNum,\r\n      amount,\r\n      pin,\r\n      depositor,\r\n     isLoading,\r\n      errors,\r\n      apiResponse\r\n     \r\n    } = this.state;\r\n\r\n    // let btnText = {};\r\n    let displayErrorMessage = \"\";\r\n\r\n    if (errors.invalidCredentialException) {\r\n      displayErrorMessage = (\r\n        <div className=\"login-err-mesg\">\r\n          {\" \"}\r\n          <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\"></i>{\" \"}\r\n          &nbsp;{errors.invalidCredentialException}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    let initiateTransBtn = \"transfer-btn\";\r\n    let isLoader = \"\";\r\n    if (isLoading) {\r\n      isLoader = <LoadSpinner />;\r\n      initiateTransBtn += \" hide-ops\";\r\n    }\r\n\r\n    let adminsuccessMesg =  \"\";\r\n          if (apiResponse === \"Successful\") {\r\n            adminsuccessMesg = (<AdminSuccessMesg/>);\r\n          }\r\n    \r\n\r\n    return (\r\n      <div className=\"init-transc\">\r\n      {adminsuccessMesg} \r\n        <form className=\"init-transc-form\" onSubmit={this.handleOnSubmit}>\r\n          <h2 id=\"signup-h2\">{title} Fund</h2>\r\n          {isLoader}\r\n          {displayErrorMessage}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"acctNum\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n              Acct Number\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"acctNum\"\r\n              name=\"acctNum\"\r\n              value={acctNum}\r\n              onChange={this.handleOnChange}\r\n              minLength=\"10\"\r\n              maxLength=\"10\"\r\n             // disabled={elementsState}\r\n              placeholder=\"enter account number\"\r\n              required\r\n            />\r\n           \r\n            {errors.acctNum && (\r\n              <span className=\"error-message\">{errors.acctNum}</span>\r\n            )}\r\n            <label htmlFor=\"amount\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n              Amount(naira)\r\n            </label>\r\n            <CurrencyFormat\r\n              id=\"amount\"\r\n              name=\"amount\"\r\n              value={amount}\r\n              onChange={this.handleOnChange}\r\n              placeholder=\"enter amount\"\r\n            //  disabled={elementsState}\r\n              thousandSeparator={true}\r\n              // suffix={\".00\"}\r\n              required\r\n            />\r\n            {errors.amount && (\r\n              <span className=\"error-message\">{errors.amount}</span>\r\n            )}\r\n            \r\n            {title === \"Deposit\" &&\r\n              (<React.Fragment><label htmlFor=\"depositor\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n                Depositor{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"depositor\"\r\n                value={depositor}\r\n                onChange={this.handleOnChange}\r\n                placeholder=\"enter depositor name\"\r\n              // disabled={elementsState}\r\n                required\r\n              />\r\n            </React.Fragment> )}    \r\n         \r\n            \r\n            <label htmlFor=\"pin\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n              Pin{\" \"}\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"trans-pin\"\r\n              id=\"pin\"\r\n              name=\"pin\"\r\n              value={pin}\r\n              onChange={this.handleOnChange}\r\n              placeholder=\"enter four to eight digits transfer pin\"\r\n             // disabled={elementsState}\r\n              required\r\n            />\r\n            {errors.pin && <span className=\"error-message\">{errors.pin}</span>}\r\n          </div>\r\n          \r\n          <button type=\"submit\" className={initiateTransBtn} id=\"admin-transc-btn\">\r\n            {title}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInitiateTransaction.defaultProps = {\r\n  title: 'Withdrawal'\r\n};\r\n\r\nInitiateTransaction.propTypes = {\r\n withdrawalAction: PropTypes.func.isRequired,\r\n depositAction: PropTypes.func.isRequired,\r\n errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, {withdrawalAction, depositAction})(InitiateTransaction);\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, TRACK_TRANSACTIONS, GET_TRANSACTION_BY_ID} from \"./types\";\r\n\r\nexport const withdrawalAction = (transDetails)  => async dispatch =>{\r\n   \r\n    try {\r\n      const res = await axios.post(`/api/v1/users/withdraw-funds`, transDetails);\r\n      console.log({res})\r\n      return dispatch({\r\n        type: \"WITHDRAWAL\",\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log({err});\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const depositAction = (transDetails) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.post(`/api/v1/users/deposit-funds`, transDetails);\r\n      console.log({res})\r\n     return dispatch({\r\n        type: \"DEPOSIT\",\r\n        payload: res.data,\r\n      });\r\n      \r\n    } catch (err) {\r\n      console.log({err});\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const operationAction =  (operationDetails)  => async (dispatch) => {\r\n    try {\r\n     const res = await axios.post(`/api/v1/admins/operation`, operationDetails);\r\n    return dispatch({\r\n       type: \"OPERATION\", \r\n       payload: res.data\r\n         });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const trackTransactionsAction = (dateRange, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/v1/admins/track-transactions`, dateRange);\r\n      dispatch({\r\n        type: TRACK_TRANSACTIONS,\r\n        payload: res.data,\r\n      });\r\n      history.push(\"/tracked-transactions\");\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n\r\n  export const getTransactionByIdAction = (transactionId, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/v1/admins/get-transaction/${transactionId}`);\r\n      dispatch({\r\n        type: GET_TRANSACTION_BY_ID,\r\n        payload: res.data,\r\n      });\r\n      history.push(\"/get-transaction-by-id\");\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n\r\n  // export const getTransactionAction = (transactionId, history) => async (dispatch) => {\r\n  //   try {\r\n  //     const res = await axios.get(`/api/v1/admins/track-transactions`, transactionId);\r\n  //     dispatch({\r\n  //       type: GET_TRANSACTION,\r\n  //       payload: res.data,\r\n  //     });\r\n  //     history.push(\"/get-transaction\");\r\n  //   } catch (err) {\r\n  //     dispatch({\r\n  //       type: GET_ERRORS,\r\n  //       payload: err,\r\n  //     });\r\n  //   }\r\n  // };","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport './Sidebar.css';\r\n\r\n\r\n\r\nclass Sidebar extends Component {\r\n  \r\n    render() {\r\n        return(\r\n            <div className=\"admin-sidebar\">\r\n              <div className=\"admin-image\"> <h3 className=\"admin-name\">Akeni Promise</h3></div>\r\n              <ul className=\"admin-sidebar-ul\">\r\n                <li className=\"admin-sidebar-li\">\r\n                  <NavLink\r\n                    className=\"admin-sidebar-navlink\"\r\n                    exact\r\n                    activeClassName=\"active\"\r\n                    to=\"/admin-dashboard\"\r\n                    >\r\n                    <i className=\"fa fa-home\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;\r\n                    Dashboard\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"admin-sidebar-li\">\r\n                <NavLink\r\n                  className=\"admin-sidebar-navlink\"\r\n                  exact\r\n                  activeClassName=\"active\"\r\n                  to=\"/withdrawal\"\r\n                  >\r\n                  <i className=\"fa fa-share fa-rotate-180\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;\r\n                  Withdrawal\r\n                </NavLink>\r\n                </li>\r\n                <li className=\"admin-sidebar-li\">\r\n                <NavLink\r\n                  className=\"admin-sidebar-navlink\"\r\n                  exact\r\n                  activeClassName=\"active\"\r\n                  to=\"/deposit\"\r\n                  >\r\n                  <i className=\"fa fa-share\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;\r\n                  Deposit\r\n                </NavLink>\r\n                </li>\r\n                <li className=\"admin-sidebar-li\">\r\n                <NavLink\r\n                  className=\"admin-sidebar-navlink\"\r\n                  exact\r\n                  activeClassName=\"active\"\r\n                  to=\"/track-transactions\"\r\n                  >\r\n                  <i className=\"fa fa-spinner\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;\r\n                  Transaction\r\n                </NavLink>\r\n                </li>\r\n                <li className=\"admin-sidebar-li\">\r\n                <NavLink\r\n                  className=\"admin-sidebar-navlink\"\r\n                  exact\r\n                  activeClassName=\"active\"\r\n                  to=\"/operation\"\r\n                  >\r\n                  <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;\r\n                  Operation\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, {Component} from 'react';\r\n\r\nimport './Navbar.css';\r\n\r\n\r\n\r\nclass Navbar extends Component {\r\n  \r\n    render() {\r\n        return(\r\n            <div className=\"admin-navbar\">\r\n              <div className=\"admin-navbar-left\">\r\n               <div className=\"admin-hamburger\">\r\n                 <p className=\"hamburger-p\">hello</p>\r\n               </div>\r\n               <input type=\"text\" placeholder=\"Enter keywords\"/>\r\n              </div>\r\n              <div className=\"admin-navbar-right\">\r\n                <p>Navbar right</p>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\n\r\nimport InitiateTransaction from '../InitiateTransaction/InitiateTransaction';\r\nimport Sidebar from '../Layout/Sidebar/Sidebar';\r\nimport Navbar from '../Layout/Navbar/Navbar';\r\nimport './Withdrawal.css';\r\n\r\nclass Withdrawal extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                <Sidebar className=\"admin-dashboard-sidebar\"/>\r\n                <div className=\"admin-main-dashboard\">\r\n                    <Navbar/>\r\n                    <InitiateTransaction />\r\n                </div>    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Withdrawal;","import React, {Component} from 'react';\r\n\r\nimport InitiateTransaction from '../InitiateTransaction/InitiateTransaction';\r\nimport Sidebar from '../Layout/Sidebar/Sidebar';\r\nimport Navbar from '../Layout/Navbar/Navbar';\r\n\r\n\r\nclass Deposit extends Component {\r\n   \r\n    render() {\r\n        const title = \"Deposit\";\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                <Sidebar className=\"admin-dashboard-sidebar\"/>\r\n                <div className=\"admin-main-dashboard\">\r\n                    <Navbar/>\r\n                    <InitiateTransaction title={title}/>\r\n                </div>    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Deposit;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Sidebar from '../Layout/Sidebar/Sidebar';\r\nimport Navbar from '../Layout/Navbar/Navbar';\r\nimport \"./Operation.css\";\r\nimport LoadSpinner from \"../../../components/LoadSpinner/LoadSpinner\";\r\nimport {operationAction} from \"../../../actions/adminActions\";\r\nimport AdminSuccessMesg from '../AdminSuccessMesg/AdminsuccessMesg';\r\n\r\n\r\nclass Operation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          acctNum: \"\",\r\n          pin: \"\",\r\n          status: \"\",\r\n          errors: {},\r\n          isLoading: false,\r\n          apiResponse: \"\"\r\n        };\r\n      }\r\n      \r\n    \r\n      handleOnChange = (event) => {\r\n        let acctNumError = {}; \r\n        let pinError = {};\r\n        const [name, value] = [event.target.name, event.target.value];\r\n\r\n        if (name === \"acctNum\") {\r\n           if (value.length === 10) {\r\n            acctNumError.acctNum = \"\";\r\n            this.setState({ errors: acctNumError });\r\n           }\r\n    \r\n           else if (value.length > 10) {\r\n            return;\r\n           }\r\n           else {\r\n            acctNumError.acctNum = \"account number must be 10 digits\";\r\n            this.setState({ errors: acctNumError });\r\n           } \r\n        }\r\n    \r\n        if (name ===\"pin\") {\r\n          if (value.length < 4 ) {\r\n            pinError.pin = \"pin must be between 4 to 8 digits\";\r\n            this.setState({ errors: pinError });\r\n          } else if (value.length > 8) {\r\n            return;\r\n          } else {\r\n            pinError.pin = \"\";\r\n            this.setState({ errors: pinError });\r\n          }\r\n        }\r\n    \r\n        this.setState({ [name]: value });\r\n      };\r\n\r\n      handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { acctNum, pin, status, apiResponse} = this.state;\r\n        const adminResponse = window.confirm(`Are you sure you want to set this user's status to ${status}`)\r\n        if (!adminResponse) {\r\n           return;\r\n        }\r\n        this.setState({ isLoading: true });\r\n       \r\n        const operationDetails = {\r\n          acctNum,\r\n          status,\r\n          pin\r\n        };\r\n        \r\n        const  {operationAction} = this.props;\r\n        const message = operationAction(operationDetails);\r\n        message.then(mesg => {\r\n          this.setState({apiResponse: mesg.payload, isLoading: false, pin: \"\", acctNum: \"\",  status: \"\"});\r\n        });\r\n      \r\n      };\r\n    \r\n      componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors,\r\n            isLoading: false,\r\n          });\r\n        }\r\n      };\r\n\r\n    render() {\r\n        const {\r\n            acctNum,\r\n            pin,\r\n            status,\r\n           isLoading,\r\n            errors,\r\n           apiResponse\r\n          } = this.state;\r\n\r\n          let displayErrorMessage = \"\";\r\n\r\n          if (errors.invalidCredentialException) {\r\n            displayErrorMessage = (\r\n              <div className=\"login-err-mesg\">\r\n                {\" \"}\r\n                <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\"></i>{\" \"}\r\n                &nbsp;{errors.invalidCredentialException}\r\n              </div>\r\n            );\r\n          }\r\n          \r\n          let opsSubmitBtn = \"transfer-btn\";\r\n          let isLoader = \"\";\r\n          if (isLoading) {\r\n            isLoader = <LoadSpinner />;\r\n            opsSubmitBtn += \" hide-ops\";\r\n          }\r\n\r\n          let adminSuccessMesg =  \"\";\r\n          if (apiResponse === \"Successful\") {\r\n            adminSuccessMesg = (<AdminSuccessMesg/>);\r\n          }\r\n\r\n        return(\r\n          \r\n            <div className=\"admin-dashboard\">\r\n            {isLoader}\r\n                <Sidebar className=\"admin-dashboard-sidebar\"/>\r\n                <div className=\"admin-main-dashboard\">\r\n                    <Navbar/>\r\n                    <div className=\"init-transc\">\r\n                        {adminSuccessMesg}\r\n                        <form className=\"init-transc-form\" onSubmit={this.handleOnSubmit}>\r\n                            {isLoader}\r\n                            <h2 id=\"signup-h2\">Operation</h2>\r\n                            {displayErrorMessage}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"benfAcctNum\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n                                Acct Number\r\n                                </label>\r\n                                <input\r\n                                type=\"number\"\r\n                                id=\"benfAcctNum\"\r\n                                name=\"acctNum\"\r\n                                value={acctNum}\r\n                                onChange={this.handleOnChange}\r\n                                minLength=\"10\"\r\n                                maxLength=\"10\"\r\n                                // disabled={elementsState}\r\n                                placeholder=\"enter account number\"\r\n                                required\r\n                            />\r\n                            {errors.acctNum && (\r\n                              <span className=\"error-message\">{errors.acctNum}</span>\r\n                            )}\r\n\r\n                            <label htmlFor=\"selectOps\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n                                Select Operation\r\n                            </label>\r\n                            <select \r\n                              name=\"status\" value={status}  \r\n                              onChange={this.handleOnChange} \r\n                              className=\"admin-select\"\r\n                              id=\"selectOps\"\r\n                               required>\r\n                              <option value=\"\">Select an operation</option> \r\n                              <option value=\"FROZEN\">FROZEN</option>\r\n                              <option value=\"SUSPENDED\">SUSPENDED</option>\r\n                              <option value=\"DEACTIVATED\">DEACTIVATED</option>\r\n                              <option value=\"BLOCKED\">BLOCKED</option>\r\n                              <option value=\"ACTIVE\">ACTIVE</option>\r\n                            </select>\r\n\r\n                            <label htmlFor=\"pin\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n                            Pin{\" \"}\r\n                            </label>\r\n                            <input\r\n                            type=\"number\"\r\n                            className=\"trans-pin\"\r\n                            id=\"pin\"\r\n                            name=\"pin\"\r\n                            value={pin}\r\n                            onChange={this.handleOnChange}\r\n                            placeholder=\"enter four to eight digits transfer pin\"\r\n                            // disabled={elementsState}\r\n                            required\r\n                            />\r\n                            {errors.pin && <span className=\"error-message\">{errors.pin}</span>}\r\n                        \r\n                            </div>\r\n                            <button type=\"submit\" className={opsSubmitBtn} id=\"admin-transc-btn\">\r\n                            Submit\r\n                          </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nOperation.propTypes = {\r\n  operationAction: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n };\r\n \r\n const mapStateToProps = (state) => ({\r\n   errors: state.errors,\r\n   response: state.admin.operation\r\n });\r\n \r\n export default connect(mapStateToProps, {operationAction})(Operation);","import React, {Component} from 'react';\r\nimport Navbar from '../Layout/Navbar/Navbar';\r\n\r\nimport Sidebar from '../Layout/Sidebar/Sidebar';\r\nimport \"./Dashboard.css\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n    render() {\r\n        return(\r\n          <div className=\"admin-dashboard\">\r\n            <Sidebar className=\"admin-dashboard-sidebar\"/>\r\n            <div className=\"admin-main-dashboard\">\r\n            <Navbar/>\r\n             <div className=\"admin-main-content\">\r\n               <h1>Hello</h1>\r\n               <p>World</p>\r\n             </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from \"react\";\r\n\r\nimport \"./TrackedTransDetails.css\";\r\n\r\nexport default class TrackedDetails extends Component {\r\n  render() {\r\n    const { posts, loading } = this.props;\r\n    if (loading) {\r\n      return (\r\n        <div>\r\n          <p>Loading...</p>\r\n        </div>\r\n      );\r\n      \r\n    }\r\n\r\n    return (\r\n      <div className=\"tracked-trans-details-div\">\r\n        <table className=\"tracked-trans-table\">\r\n          <thead className=\"tracked-trans-table-thead\">\r\n            <tr>\r\n              <th>Type</th>\r\n              <th>Amount</th>\r\n              <th>Peer-account</th>\r\n              <th>Description</th>\r\n              <th>staffInvolved</th>\r\n              <th>TransactionId</th>\r\n              <th>Date</th>\r\n              <th>userId</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n        \r\n            {posts.map((post) => (\r\n              <tr key={post.id}>\r\n                <td>{post.id}</td>\r\n                <td>{post.amount}</td>\r\n                <td>{post.accountNumberInvolved}</td>\r\n                <td>{post.description}</td>\r\n                <td>{post.staffInvolved}</td>\r\n                <td>{post.transactionId}</td>\r\n                <td>{post.created_At}</td>\r\n                <td>{post.userId}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Pagination.css\";\r\n\r\nexport default class Pagination extends Component {\r\n  render() {\r\n    const {\r\n      postsPerPage,\r\n      totalPosts,\r\n      paginate,\r\n      nextPage,\r\n      prevPage,\r\n    } = this.props;\r\n\r\n    let pageNumbers = [];\r\n    const totalPages = Math.ceil(totalPosts/postsPerPage);\r\n    pageNumbers = Array.from({length:totalPages},(index,value)=> ++value);\r\n\r\n    return (\r\n      <nav id=\"pagination-nav\">\r\n            <a onClick={() => prevPage()} className=\"page-item\" href=\"#\">\r\n            &laquo;\r\n            </a>\r\n          {pageNumbers.map((pageNum) => {\r\n            let pageLink = (pageNum === 1 ? \"page-link paginate-active\" :\"page-link\");\r\n            return ( \r\n              <a key={pageNum}\r\n                href=\"#\"\r\n                className={pageLink}\r\n                id={`pag-${pageNum}`} \r\n                onClick={(event) => paginate(event, pageNum)}\r\n              >\r\n                {pageNum}\r\n              </a>\r\n          )})}\r\n            <a onClick={() => nextPage()} className=\"page-item\" href=\"#\">\r\n            &raquo;\r\n            </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","export const  posts = [\r\n    {\r\n      id: 1,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for food\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n    {\r\n      id: 2,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for bread\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n    {\r\n      id: 3,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for food\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n{\r\n      id: 4,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for food\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n    {\r\n      id: 5,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for bread\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n    {\r\n      id: 6,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for food\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n{\r\n      id: 7,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for food\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n    {\r\n      id: 8,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for bread\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n    {\r\n      id: 9,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for food\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n{\r\n      id: 10,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for food\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n    {\r\n      id: 11,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for bread\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    },\r\n    {\r\n      id: 12,\r\n      amount: 5000,\r\n      accountNumberInvolved: \"0123456789\",\r\n      description: \"Money for food\",\r\n      staffInvolved: \"Ijeoma\",\r\n      transactionId: \"a786tt54779\",\r\n      created_At: \"2020-03-21\",\r\n      userId: 1\r\n    }\r\n  ];","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Sidebar from \"../Layout/Sidebar/Sidebar\";\r\nimport Navbar from \"../Layout/Navbar/Navbar\";\r\nimport TrackedTransDetails from \"../TrackedTransDetails/TrackedTransDetails\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport {posts} from \"../Data\";\r\n\r\nclass TrackedTransactions extends Component {\r\n  state = {\r\n    posts: [],\r\n    currentPage: 1,\r\n    postsPerPage: 5,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    // const details = this.props.trackedTransactions;\r\n    // this.setState({\r\n    //   posts: details.content,\r\n    // });\r\n    this.setState({\r\n      posts: posts,\r\n    });\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  render() {\r\n    const { posts, postsPerPage, currentPage, loading } = this.state;\r\n\r\n    if (!posts || posts.length < 1) {\r\n      return (\r\n        <div className=\"trans transactions-h2\">\r\n          <h2>No result found</h2>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const totalPages = Math.ceil(posts.length / postsPerPage);\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const setActive = (event) => {\r\n       document.querySelector(\".paginate-active\").classList.remove(\"paginate-active\");\r\n       event.target.classList.add(\"paginate-active\");\r\n    }\r\n    const paginate = (event,pageNum) => {\r\n      setActive(event);\r\n      this.setState({ currentPage: pageNum });\r\n    }\r\n    const nextPage = (event) => {\r\n\r\n      if (currentPage + 1 > totalPages) {\r\n        return;\r\n      } \r\n      \r\n      const previousCurrElement = document.getElementById(`pag-${currentPage}`);\r\n      previousCurrElement.classList.remove(\"paginate-active\");\r\n      const currentElement = document.getElementById(`pag-${currentPage + 1}`);\r\n      currentElement.classList.add(\"paginate-active\");\r\n      this.setState({ currentPage: currentPage + 1 });\r\n    };\r\n    const prevPage = () => {\r\n      if (currentPage - 1 < 1) {\r\n        return;\r\n      }  \r\n      const previousCurrElement = document.getElementById(`pag-${currentPage}`);\r\n      previousCurrElement.classList.remove(\"paginate-active\");\r\n      const currentElement = document.getElementById(`pag-${currentPage - 1}`);\r\n      currentElement.classList.add(\"paginate-active\");\r\n      this.setState({ currentPage: currentPage - 1 });\r\n    };\r\n\r\n    return (\r\n            <div className=\"admin-dashboard\">\r\n              <Sidebar className=\"admin-dashboard-sidebar\"/>\r\n              <div className=\"admin-main-dashboard\">\r\n                <Navbar/>\r\n                <div className=\"tracked-transactions-div\">\r\n                  <h2 className=\"tracked-trans-h2\">Tracked Transactions</h2>\r\n                  <TrackedTransDetails posts={currentPosts} loading={loading} />\r\n                  <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={posts.length}\r\n                    paginate={paginate}\r\n                    nextPage={nextPage}\r\n                    prevPage={prevPage}\r\n                  />\r\n                </div>\r\n              </div>    \r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// TrackedVisitors.propTypes = {\r\n//   trackedVisitors: PropTypes.object.isRequired,\r\n// };\r\nconst mapStateToProps = (state) => ({\r\n  trackedTransactions: state.admin.trackedTransactions,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TrackedTransactions);\r\n","import React, {Component} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {trackTransactionsAction, getTransactionByIdAction} from \"../../../actions/adminActions\";\r\nimport Sidebar from '../Layout/Sidebar/Sidebar';\r\nimport Navbar from '../Layout/Navbar/Navbar';\r\nimport LoadSpinner from \"../../../components/LoadSpinner/LoadSpinner\";\r\nimport \"./TrackTransactions.css\";\r\n\r\nclass TrackTransaction extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n          start: \"\",\r\n          end: \"\",\r\n          transId: \"\",\r\n          showTransactionById: false,\r\n          isLoading: false\r\n        };\r\n      }\r\n    \r\n      handleOnChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value,\r\n        });\r\n      };\r\n\r\n      handleToggleSwitch = () => {\r\n        this.setState({showTransactionById: !this.state.showTransactionById});\r\n      }\r\n    \r\n      handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { start, end, showTransactionById, transId, isLoading } = this.state;\r\n        this.setState({ isLoading: true });\r\n        const dateRange = { start, end };\r\n        const { trackTransactionsAction, getTransactionByIdAction, history } = this.props;\r\n        \r\n        if (showTransactionById) {\r\n          getTransactionByIdAction(transId, history);\r\n        } else {\r\n          trackTransactionsAction(dateRange, history);\r\n        }\r\n       \r\n      };\r\n\r\n     \r\n\r\n    render() {\r\n        const { start, end, showTransactionById, transId, isLoading } = this.state;\r\n        let h2Content = \"Track transactions from a particular date to another\";\r\n\r\n        if (showTransactionById) {\r\n           h2Content = \"Track transactions by Id\";\r\n        }\r\n\r\n        let trackTransBtn = \"transfer-btn\";\r\n        let isLoader = \"\";\r\n\r\n        if (isLoading) {\r\n           isLoader = <LoadSpinner />;\r\n           trackTransBtn += \" hide-ops\";\r\n        }\r\n\r\n        return(\r\n            <div className=\"admin-dashboard admin-track-trans-div\">\r\n                <Sidebar className=\"admin-dashboard-sidebar\"/>\r\n                <div className=\"admin-main-dashboard\">\r\n                    <Navbar/>\r\n                    <div className=\"init-transc\">\r\n                    <h2 className=\"tracked-trans-h2\">\r\n                      {h2Content}\r\n                    </h2>\r\n                    <form className=\"init-transc-form\" onSubmit={this.handleOnSubmit}>\r\n                     {isLoader}\r\n                    {!showTransactionById && (\r\n                      <React.Fragment>\r\n                      <div className=\"form-group\">\r\n                      <label htmlFor=\"start-date\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n                      Start Date\r\n                     </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"start\"\r\n                          value={start}\r\n                          onChange={this.handleOnChange}\r\n                          id=\"start-date\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"end-date\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n                        End Date\r\n                        </label>\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"end\"\r\n                          value={end}\r\n                          onChange={this.handleOnChange}\r\n                          id=\"end-date\"\r\n                          required\r\n                        />\r\n                       \r\n                      </div>\r\n                      </React.Fragment>\r\n                    )}\r\n                      \r\n                    {showTransactionById && (\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"trans-id\" className=\"transfer-label extra\" id=\"admin-transc-label\">\r\n                        Transaction Id\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"transId\"\r\n                          className=\"\"\r\n                          value={transId}\r\n                          onChange={this.handleOnChange}\r\n                          placeholder=\"Enter transaction id\"\r\n                          id=\"trans-id\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                    )}\r\n                      <button type=\"submit\" className={trackTransBtn} id=\"admin-transc-btn\">\r\n                      Submit\r\n                    </button>\r\n                    </form>\r\n                  </div>\r\n                </div>   \r\n                <div className=\"toggle-switch-track-trans\" >\r\n                  <label className=\"switch\" >\r\n                     <input type=\"checkbox\" onClick={this.handleToggleSwitch}/>\r\n                     <span className=\"slider round\"></span>\r\n                  </label>\r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTrackTransaction.propTypes = {\r\n    trackTransactionsAction: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n  };\r\n  const mapStateToProps = (state) => ({\r\n    errors: state.errors,\r\n  });\r\n  export default connect(mapStateToProps, { trackTransactionsAction, getTransactionByIdAction })(TrackTransaction);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { resetPinAction } from \"../../actions/userActions\";\r\nimport LoadSpinner from \"../LoadSpinner/LoadSpinner\";\r\nimport { isObjectEmpty } from \"../../HelperFunctions/isObjectEmpty\";\r\n\r\nclass ResetPin extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.currentPin = \"\";\r\n    this.newPin = \"\";\r\n    this.confirmNewPin = \"\";\r\n\r\n    this.state = {\r\n      currentPin: \"\",\r\n      newPin: \"\",\r\n      confirmNewPin: \"\",\r\n      isLoading: false,\r\n      errors: {},\r\n    };\r\n  }\r\n   \r\n  componentWillReceiveProps = (nextProps) => {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n        isLoading: false,\r\n      });\r\n      \r\n    }\r\n    \r\n  };\r\n\r\n  handleOnChange = (event) => {\r\n    const [name, value] = [event.target.name, event.target.value];\r\n\r\n    if (name ===\"currentPin\") {\r\n      this.currentPin = value;\r\n      let currentPinError = {};\r\n      if (value.length < 4 ) {\r\n        currentPinError.currentPin = \"pin must be between 4 to 8 digits\";\r\n        this.setState({ errors: currentPinError });\r\n      } else if (value.length > 8) {\r\n        return;\r\n      } else {\r\n        currentPinError.pin = \"\";\r\n        this.setState({ errors: currentPinError });\r\n      }\r\n    }\r\n\r\n    if (name ===\"newPin\") {\r\n      this.newPin = value;\r\n      let newPinError = {};\r\n      if (value.length < 4 ) {\r\n        newPinError.newPin = \"pin must be between 4 to 8 digits\";\r\n        this.setState({ errors: newPinError });\r\n      } else if (value.length > 8) {\r\n        return;\r\n      } else {\r\n        newPinError.pin = \"\";\r\n        this.setState({ errors: newPinError });\r\n      }\r\n    }\r\n\r\n    //  validation for confirm new pin\r\n    if (name === \"confirmNewPin\" && value.length > 0) {\r\n      this.confirmNewPin = value;\r\n      let confirmNewPinError = {};\r\n      let newPinError = {};\r\n      const { newPin } = this.state;\r\n\r\n      if (value.length < 4 ) {\r\n        newPinError.newPin = \"pin must be between 4 to 8 digits\";\r\n        this.setState({ errors: newPinError });\r\n      }\r\n\r\n      if (value.length > 8) {\r\n        return;\r\n      }\r\n\r\n      if (newPin.length < 4 ) {\r\n          confirmNewPinError.confirmNewPin =\r\n          \"fill in new pin field first which cannot be empty or less than four characters\";\r\n        this.setState({ errors: confirmNewPinError, confirmNewPin: \"\" });\r\n        return;\r\n      }\r\n\r\n      if (value !== this.state.newPin) {\r\n        confirmNewPinError.confirmNewPin = \"pins must match\";\r\n        this.setState({ errors: confirmNewPinError });\r\n      } else {\r\n        this.setState({ errors: confirmNewPinError });\r\n      }\r\n    }\r\n    this.setState({ [name]: value });\r\n    \r\n    if((this.currentPin.length > 3 && this.currentPin.length < 9) \r\n      && (this.newPin.length > 3 && this.newPin.length < 9) \r\n      && ( this.newPin ===  this.confirmNewPin)) {\r\n        this.setState({errors: {}});\r\n      }\r\n  };\r\n\r\n  handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ isLoading: true });\r\n\r\n    const { currentPin, newPin, confirmNewPin } = this.state;\r\n\r\n    const pinCredentials = {\r\n      currentPin,\r\n      newPin,\r\n      confirmNewPin,\r\n    };\r\n  \r\n    const { resetPinAction, history } = this.props;\r\n    resetPinAction(pinCredentials, history);\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { currentPin, newPin, confirmNewPin, isLoading, errors } = this.state;\r\n    let submitBtnClassName = \"\";\r\n    let btnNotAllowSubmit = \"\"; // allows submit by default\r\n\r\n    if (isObjectEmpty(errors)) {\r\n      submitBtnClassName = \"register-btn\";\r\n      btnNotAllowSubmit = false;\r\n    } else {\r\n      submitBtnClassName = \"register-btn error\";\r\n      btnNotAllowSubmit = true;\r\n    }\r\n    \r\n   // If there is an error from the server, allow btn submit\r\n    if(errors.invalidCredentialException) {\r\n      submitBtnClassName = \"register-btn\";\r\n      btnNotAllowSubmit = false;\r\n    }\r\n\r\n   \r\n\r\n\r\n    let isLoader = (\r\n      <button\r\n        type=\"submit\"\r\n        className={submitBtnClassName}\r\n        disabled={btnNotAllowSubmit}\r\n      >\r\n        Submit\r\n      </button>\r\n    );\r\n\r\n    if (isLoading) {\r\n      isLoader = <LoadSpinner />;\r\n    }\r\n    \r\n    let displayErrorMessage = \"\";\r\n\r\n    if (errors.invalidCredentialException) {\r\n      displayErrorMessage = (\r\n        <div className=\"login-err-mesg\">\r\n          {\" \"}\r\n          <i className=\"fa fa-bell-slash-o\" aria-hidden=\"true\"></i>{\" \"}\r\n          &nbsp;{errors.invalidCredentialException}\r\n        </div>\r\n      );\r\n    }\r\n    \r\n\r\n    return (\r\n      <div className=\"signup\">\r\n        <div className=\"signup-logo\">\r\n          <h3>\r\n            <a href=\"/\">\r\n              Banka&nbsp;\r\n              <i className=\"fa fa-university logo-icon\" aria-hidden=\"true\"></i>\r\n            </a>\r\n          </h3>\r\n        </div>\r\n        <h2 id=\"signup-h2\" className=\"fgt-password\">\r\n          Reset Pin \r\n        </h2>\r\n        \r\n        {displayErrorMessage}\r\n        <form className=\"change-pin-form\" onSubmit={this.handleOnSubmit}>\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input trans-pin\"\r\n              type=\"number\"\r\n              placeholder=\"enter reset pin that was sent to your mail\"\r\n              name=\"currentPin\"\r\n              disabled={isLoading}\r\n              onChange={this.handleOnChange}\r\n              value={currentPin}\r\n              required\r\n            />\r\n            {errors.currentPin && <span className=\"error-message\">{errors.currentPin}</span>}\r\n          </div>\r\n\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input trans-pin\"\r\n              type=\"number\"\r\n              placeholder=\"enter new pin\"\r\n              name=\"newPin\"\r\n              onChange={this.handleOnChange}\r\n              disabled={isLoading}\r\n              value={newPin}\r\n              required\r\n            />\r\n            {errors.newPin && (\r\n              <span className=\"error-message\">{errors.newPin}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"signup-container\">\r\n            <input\r\n              className=\"signup-input trans-pin\"\r\n              type=\"number\"\r\n              placeholder=\"confirm new pin\"\r\n              name=\"confirmNewPin\"\r\n              value={confirmNewPin}\r\n              disabled={isLoading}\r\n              onChange={this.handleOnChange}\r\n              required\r\n            />\r\n            {errors.confirmNewPin && (\r\n              <span className=\"error-message\">{errors.confirmNewPin}</span>\r\n            )}\r\n          </div>\r\n\r\n          {isLoader}\r\n          \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResetPin.propTypes = {\r\n  resetPinAction: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { resetPinAction })(ResetPin);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport Login from \"./components/Login/Login\";\nimport Signup from \"./components/Signup/Signup\";\nimport ForgotPassword from \"./components/ForgotPassword/ForgotPassword\";\nimport TransferFund from \"./components/TransferFund/TransferFund\";\nimport jwtDecode from \"jwt-decode\";\nimport { setJwtToken } from \"./securityUtils/setJwtToken\";\nimport store from \"./store\";\nimport { LOGIN } from \"./actions/types\";\nimport { logoutAction } from \"./actions/userActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\nimport CashierAdminRoute from \"./securityUtils/CashierAdminRoute\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport ForgotPin from \"./components/ForgotPin/ForgotPin\";\nimport ChangePin from \"./components/ChangePin/ChangePin\";\nimport UserProfile from \"./components/UserProfile/UserProfile\";\nimport UserGuide from \"./components/UserGuide/UserGuide\";\nimport ResetPassword from \"./components/ResetPassword/ResetPassword\";\nimport { ConfirmReg } from \"./components/ConfirmRegistration/ConfirmReg\";\nimport DummyAccounts from \"./components/DummyAccounts/DummyAccounts\";\nimport TransferSuccess from \"./components/TransferStatus/TransferSuccess\";\nimport RegistrationSuccessful from \"./components/ConfirmRegistration/RegistrationSuccessful\";\nimport ChangePinSuccessful from \"./components/ConfirmRegistration/ChangePinSuccessful\";\nimport ForgotPinSuccessful from \"./components/ConfirmRegistration/ForgotPinSuccessful\";\nimport ForgotPasswdSuccessful from \"./components/ConfirmRegistration/ForgotPasswdSuccessful\";\nimport Error404 from \"./components/Error404/Error404\";\nimport ResetPasswdSuccessful from \"./components/ConfirmRegistration/ResetPasswdSuccessful\";\nimport {SessionTimeOut} from \"./components/Session/SessionTimeout\";\nimport Withdrawal from \"./components/Admin/Withdrawal/Withdrawal\";\nimport Deposit from \"./components/Admin/Deposit/Deposit\";\nimport Operation from  \"./components/Admin/Operation/Operation\";\nimport {inactiveSessionTimeout} from \"./actions/userActions\";\nimport AdminDashboard from \"./components/Admin/Dashboard/Dashboard\";\nimport TrackedTransactions from \"./components/Admin/TrackedTransactions/TrackedTransactions\";\nimport TrackTransactions from \"./components/Admin/TrackTransactions/TrackTransactions\";\nimport ConfirmRegistration from \"./components/ConfirmRegistration/ConfirmRegistration\";\nimport ResetPin from \"./components/ResetPin/ResetPin\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJwtToken(jwtToken);\n  const decodedToken = jwtDecode(jwtToken);\n  store.dispatch({\n    type: LOGIN,\n    payload: decodedToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decodedToken.exp < currentTime) {\n    store.dispatch(logoutAction());\n    window.location.href = \"/\";\n  }\n}\n\ninactiveSessionTimeout();\n\nfunction App() {\n  let appClass = \"App\";\n  const pathname = window.location.pathname.substr(1);\n  const adminPaths = ['admin-dashboard', 'deposit', 'withdrawal', 'operation', 'transaction', 'admin-sidebar', 'tracked-transactions',\n      'track-transactions'\n  ];\n  const isAdminPath = adminPaths.includes(pathname);\n\n  /**\n   * The admin urls will be large screen only, this helps us to break out of the default small screen\n   * for other urls\n   */\n  if (isAdminPath) {\n      appClass+=\" admin-app\";\n     // document.body.style.backgroundImage = \"\";\n  }\n  \n  return (\n    <Router>\n      <div className={appClass}>\n        {\n          // public Routes\n        }\n        \n        <Switch>\n       {/* <Route exact path=\"/\" component={Login} /> */}\n        <CashierAdminRoute exact path=\"/admin-dashboard\" component={AdminDashboard}/> \n        <CashierAdminRoute exact path=\"/tracked-transactions\" component={TrackedTransactions}/> \n        <CashierAdminRoute exact path=\"/tracked-transaction\" component={TrackTransactions}/> \n        <CashierAdminRoute exact path=\"/withdrawal\" component={Withdrawal} />\n        <CashierAdminRoute exact path=\"/deposit\" component={Deposit} />\n\n        {/* AuthenticatedUserRoute  - /dashboard, /profile, /transfer-funds, /transfer-success */ }\n        {/* AnyAuthenticatedPersonRoute - /change-pin, /forgot-pin,  */}\n\n        <SecuredRoute exact path=\"/change-pin\" component={ChangePin} />\n        <SecuredRoute exact path=\"/forgot-pin\" component={ForgotPin} />\n        <SecuredRoute exact path=\"/transfer-funds\" component={TransferFund} />\n        <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n        <SecuredRoute exact path=\"/profile\" component={UserProfile} />\n        <SecuredRoute exact path=\"/transfer-success\" component={TransferSuccess} />\n        <SecuredRoute exact path=\"/change-pin-success\" component={ChangePinSuccessful} />\n        <SecuredRoute exact path=\"/reset-pin\" component={ResetPin} />\n        <SecuredRoute\n            exact\n            path=\"/dummy-accounts\"\n            component={DummyAccounts}\n          />\n\n\n\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/user-guide\" component={UserGuide} />\n        <Route exact path=\"/forgot-password\" component={ForgotPassword} />\n        <Route path=\"/password-reset\" component={ResetPassword} />\n        <Route path=\"/confirm-registration\" component={ConfirmReg} />\n        <Route path=\"/reg-successful\" component={RegistrationSuccessful} />\n        <Route path=\"/forgot-pin-successful\" component={ForgotPinSuccessful}/>\n        <Route path=\"/forgot-passwd-successful\" component={ForgotPasswdSuccessful} />\n        <Route path=\"/reset-passwd-successful\" component={ResetPasswdSuccessful} />\n        <Route exact path=\"/session-timeout\" component={SessionTimeOut} /> \n        {/* <Route exact path=\"/admin-dashboard\" component={AdminDashboard} />\n         <Route exact path=\"/withdrawal\" component={Withdrawal} />\n      <Route exact path=\"/deposit\" component={Deposit} /> */}\n        \n        {/*<Route exact path=\"/pagination\" component={Pagination} /> */}\n        {/*<Route exact path=\"/transfer-success\" component={TransferSuccess} /> */}\n        {/*<Route exact path=\"/tracked-transactions\" component={TrackedTransactions} />\n         <Route exact path=\"/track-transactions\" component={TrackTransactions} />\n    <Route exact path=\"/test\" component={ConfirmRegistration} /> */}\n        \n        \n        \n        {/*<CashierAdminRoute exact path=\"admin-dashboard\" component={AdminDashboard}/> */} \n          <Route component={Error404} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/img1.d20dee07.PNG\";","module.exports = __webpack_public_path__ + \"static/media/img2.77510da4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/error_404.a8f0959c.jpg\";"],"sourceRoot":""}